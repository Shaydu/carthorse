# Route Discovery Configuration
# This file contains settings for pre-computing route recommendations

# ❌ NOT ACTIVELY USED: This enabled flag is not used in code
#     Route discovery is always enabled when the feature is implemented
enabled: true

# ✅ NEW: Trailhead configuration for route generation
#    These settings control trailhead-based route generation
trailheads:
  # Enable trailhead-based route generation
  # When enabled, route generation will use only designated trailhead nodes
  # When disabled, route generation uses default entry point selection
  enabled: false                       # Can be overridden by USE_TRAILHEADS_ONLY env var
  
  # Maximum number of trailheads to use for route generation
  # Higher values provide more route diversity but slower generation
  maxTrailheads: 50                     # Can be overridden by MAX_TRAILHEADS env var
  
  # Trailhead locations specified by coordinates
  # These are the actual trailhead locations - the system will find the nearest routing nodes
  locations:
    - name: "Test Trailhead 1"
      lat: 39.960197583198685
      lng: -105.23691769326956
      tolerance_meters: 50              # How close to look for routing nodes (default: 50m)
    
    - name: "Chautauqua Trailhead"
      lat: 39.9998007
      lng: -105.2829868
      tolerance_meters: 100             # How close to look for routing nodes (default: 50m)
    
    - name: "NCAR Trailhead"
      lat: 40.0103284
      lng: -105.2900501
      tolerance_meters: 100             # How close to look for routing nodes (default: 50m)
    
    - name: "Flagstaff Trailhead"
      lat: 40.0141479
      lng: -105.295601
      tolerance_meters: 100             # How close to look for routing nodes (default: 50m)
    
    - name: "Boulder Creek Trailhead"
      lat: 39.9787108
      lng: -105.2754759
      tolerance_meters: 100             # How close to look for routing nodes (default: 50m)
    
    - name: "Mesa Trailhead"
      lat: 39.98134
      lng: -105.280376
      tolerance_meters: 100             # How close to look for routing nodes (default: 50m)
    
    - name: "Bear Canyon Trailhead"
      lat: 39.9856735
      lng: -105.2777543
      tolerance_meters: 100             # How close to look for routing nodes (default: 50m)
  
  # Trailhead selection strategy
  # "coordinates" - use specified coordinate locations (most reliable)
  # "manual" - only use manually marked trailheads in database
  # "auto" - automatically detect potential trailheads (not implemented yet)
  selectionStrategy: "coordinates"      # Can be overridden by TRAILHEAD_STRATEGY env var
  
  # Validation settings for trailhead configuration
  validation:
    minTrailheads: 1                    # Minimum number of trailheads required
    maxDistanceBetweenTrailheads: 10.0  # Maximum distance between trailheads (km)
    requireParkingAccess: false         # Whether to require parking access (not implemented yet)

# ✅ ACTIVELY USED: Routing tolerance settings for node and edge generation
#    These control the precision of routing graph generation
routing:
  # Single spatial tolerance for all precision operations (in meters)
  # Controls how close trail endpoints need to be for edge generation, intersection detection, etc.
  spatialTolerance: 2.0         # Single tolerance for all precision operations
  
  # Degree2 merge tolerance for chain connectivity (in meters)
  # Controls how close trail endpoints need to be to consider them connected for merging
  # Set to 2.0m to match spatialTolerance for consistent behavior
  degree2MergeTolerance: 2.0    # 2 meters for degree-2 chain connectivity

# ✅ ENABLED: Trail gap filling tolerance for Layer 1 processing
#    This controls how close trail endpoints need to be to create connector trails
trailGapFilling:
  # Tolerance for detecting gaps between trail endpoints (in meters)
  # When two trail endpoints are within this distance, a connector trail is created
  # Note: This only applies to trail endpoints (start/end points), not intersections
  toleranceMeters: 5.0          # 5 meters - create connectors for nearby endpoints
  
  # Maximum number of connector trails to create per export
  # Prevents excessive connector creation in complex networks
  maxConnectors: 100            # Maximum 100 connector trails
  
  # Minimum length for connector trails (in meters)
  # Connectors shorter than this are not created to avoid tiny segments
  minConnectorLengthMeters: 1.0 # Minimum 1 meter connector length
  
  # Enable/disable deduplication of overlapping edges
  # When true: removes duplicate/overlapping trail segments
  # When false: keeps all trail segments (may have overlaps)
  enableOverlapDeduplication: true    # Enable overlap deduplication for cleaner network
  
  # Enable/disable degree-2 chain merging and cleanup
  # When true: merges degree-2 chains into longer edges and cleans up orphaned vertices
  # When false: keeps degree-2 edges separate with vertices between them
  enableDegree2Merging: true    # Enable degree-2 chain merging for better routeability

# ✅ NEW: Layer 1 backfill configuration for external trail data sources
#    These settings control which external APIs are used to backfill missing trails
backfill:
  # Overpass API backfill (OpenStreetMap data)
  # Queries OSM for missing trails in the specified bbox
  overpass:
    enabled: false              # Enable/disable Overpass API backfill
    maxTrails: 500              # Maximum trails to fetch per bbox
    timeoutMs: 30000            # API timeout in milliseconds
  
  # Enhanced OSM backfill (expanded trail types)
  # Queries OSM with additional trail types: cycleways, bridleways, service roads, etc.
  enhancedOsm:
    enabled: true               # Enable/disable enhanced OSM backfill (FIXED: simplified query and better error handling)
    maxTrails: 200              # Maximum trails to fetch per bbox
    timeoutMs: 60000            # API timeout in milliseconds
    trailTypes:
      - "hiking"                # Primary hiking trails
      - "mountain_bike"         # Mountain bike trails
      - "bike"                  # Bicycle trails
      - "horse"                 # Horse trails
      - "service_road"          # Service roads with foot access
  
  # Hiking Project API backfill
  # Queries Hiking Project for additional trail data (free tier)
  hikingProject:
    enabled: false              # Enable/disable Hiking Project API backfill
    maxTrails: 100              # Maximum trails to fetch per bbox
    apiKey: ""                  # Hiking Project API key (free registration required)
    timeoutMs: 30000            # API timeout in milliseconds
  
  # COTREX API backfill (Colorado-specific)
  # Queries Colorado Trail Explorer for official state trail data
  cotrex:
    enabled: false              # Enable/disable COTREX API backfill
    maxTrails: 200              # Maximum trails to fetch per bbox
    timeoutMs: 30000            # API timeout in milliseconds
    apiKey: ""                  # COTREX API key (required for authentication)
  
  # Minimum trail length for intersection detection (in meters)
  # Trails shorter than this are excluded from intersection detection
  # Set to 0 to include all trails regardless of length
  minTrailLengthMeters: 0  # Can be overridden by MIN_TRAIL_LENGTH_METERS env var
  
  # Minimum distance between routes for deduplication (in kilometers)
  # Set to 0 to disable geographic spacing filtering entirely
  # This prevents routes from being filtered out in dense areas like Chautauqua
  minDistanceBetweenRoutes: 0  # Keep disabled to maximize route output
  
  # KSP (K-Shortest Path) K value for route diversity
  # Higher values generate more diverse routes but take longer to compute
  # Recommended range: 5-15 for good diversity vs performance balance
  kspKValue: 25  # Increased to 25 for maximum route diversity

# ✅ NEW: Route generation configuration
#    These settings control how many routes are generated and their diversity
routeGeneration:
  # KSP (K-Shortest Path) route generation settings
  ksp:
    # Target number of routes to generate per pattern
    # Higher values generate more routes but take longer to compute
    targetRoutesPerPattern: 100  # Can be overridden by KSP_TARGET_ROUTES env var
    
    # Maximum number of starting nodes to process
    # Set to -1 to use all available nodes
    maxStartingNodes: -1  # Can be overridden by KSP_MAX_STARTING_NODES env var
    
    # Whether to remove per-pattern limits to allow accumulation across patterns
    # When true, routes from all patterns are accumulated together
    accumulateAcrossPatterns: true  # Can be overridden by KSP_ACCUMULATE_PATTERNS env var
  
  # Loop route generation settings
  loops:
    # Target number of loop routes to generate per pattern
    # Higher values generate more loops but take longer to compute
    targetRoutesPerPattern: 50  # Can be overridden by LOOP_TARGET_ROUTES env var
    
    # Whether to use Hawick circuits for loop generation
    # Hawick circuits are more efficient for smaller loops
    useHawickCircuits: true  # Can be overridden by LOOP_USE_HAWICK env var
  
  # General route generation settings
  general:
    # Whether to enable route scoring and filtering
    # When true, routes are scored and filtered based on quality
    enableScoring: true  # Can be overridden by ROUTE_ENABLE_SCORING env var
    
    # Default route score for generated routes
    # Routes with higher scores are preferred
    defaultRouteScore: 100  # Can be overridden by ROUTE_DEFAULT_SCORE env var
    
    # Whether to enable duplicate trail combination filtering
    # When true, routes with identical trail combinations are filtered out
    enableDuplicateFiltering: false  # Only exact identical routes are filtered, regardless of this setting

# ❌ NOT ACTIVELY USED: Bin configuration is not implemented in code
#     The route discovery system doesn't use dynamic bin generation
binConfiguration:
  # Distance bin settings
  distance:
    # Number of distance bins to generate
    binCount: 9                        # ❌ Not used - no bin generation
    
    # Distance range (in kilometers)
    minDistanceKm : 1.0                 # ❌ Not used - no bin generation
    maxDistanceKm: 10.0                 # ❌ Not used - no bin generation
    
    # Bin width options
    # "fixed" - equal width bins (e.g., 1-2km, 2-3km, 3-4km)
    # "variable" - variable width bins (e.g., 1-2km, 2-4km, 4-7km, 7-10km)
    widthType: "fixed"                  # ❌ Not used - no bin generation
    
    # For variable width: specify custom bin edges
    # Leave empty for fixed width
    customBinEdges: []                  # ❌ Not used - no bin generation
    # Example: [1, 2, 4, 7, 10] creates bins: 1-2km, 2-4km, 4-7km, 7-10km
  
  # Elevation bin settings
  elevation:
    # Number of elevation bins to generate
    binCount: 9                        # ❌ Not used - no bin generation
    
    # Elevation range (in meters)
    minElevationMeters: 1              # ❌ Not used - no bin generation
    maxElevationMeters: 4500           # ❌ Not used - no bin generation
    
    # Bin width options
    # "fixed" - equal width bins (e.g., 1-200m, 200-400m, 400-600m)
    # "variable" - variable width bins (e.g., 1-100m, 100-300m, 300-600m, 600-1000m)
    widthType: "fixed"                  # ❌ Not used - no bin generation
    
    # For variable width: specify custom bin edges
    # Leave empty for fixed width
    customBinEdges: []                  # ❌ Not used - no bin generation
    # Example: [1, 100, 300, 600, 1000, 1500, 2000, 2500, 3000]
  
  # Elevation gain rate ranges (elevation gain per kilometer)
  elevationGainRate:
    # Enable elevation gain rate ranges
    enabled: true                       # ❌ Not used - no elevation gain rate processing
    
    # Gain rate range (meters per kilometer)
    minGainRate: 0                      # ❌ Not used - no elevation gain rate processing
    maxGainRate: 150                    # ❌ Not used - no elevation gain rate processing
    
    # Use predefined ranges instead of bins
    useRanges: true                     # ❌ Not used - no elevation gain rate processing
    
    # Predefined ranges matching frontend
    ranges:                             # ❌ Not used - no elevation gain rate processing
      - min: 0
        max: 15
        label: "0–15 m/km"
        colorIndex: 0
      - min: 15
        max: 30
        label: "15–30 m/km"
        colorIndex: 1
      - min: 30
        max: 45
        label: "30–45 m/km"
        colorIndex: 2
      - min: 45
        max: 60
        label: "45–60 m/km"
        colorIndex: 3
      - min: 60
        max: 75
        label: "60–75 m/km"
        colorIndex: 4
      - min: 75
        max: 90
        label: "75–90 m/km"
        colorIndex: 5
      - min: 90
        max: 105
        label: "90–105 m/km"
        colorIndex: 6
      - min: 105
        max: 120
        label: "105–120 m/km"
        colorIndex: 7
      - min: 120
        max: 135
        label: "120–135 m/km"
        colorIndex: 8
      - min: 135
        max: 150
        label: "135–150 m/km"
        colorIndex: 9
      - min: 150
        max: null
        label: "> 150 m/km"
        colorIndex: 10

# ❌ NOT ACTIVELY USED: Generated bins are not used in code
#     These are examples but not actually generated or used
generatedBins:
  # Distance bins (9 bins, 1-10km, fixed width)
  distance:                             # ❌ Not used - no bin generation
    - [1.0, 2.0, "short walks"]
    - [2.0, 3.0, "short hikes"]
    - [3.0, 4.0, "moderate hikes"]
    - [4.0, 5.0, "moderate hikes"]
    - [5.0, 6.0, "longer hikes"]
    - [6.0, 7.0, "longer hikes"]
    - [7.0, 8.0, "full-day hikes"]
    - [8.0, 9.0, "full-day hikes"]
    - [9.0, 10.0, "full-day hikes"]
  
  # Elevation bins (9 bins, 1-4500m, fixed width)
  elevationMeters:                     # ❌ Not used - no bin generation
    - [1, 500, "flat/easy"]
    - [500, 1000, "gentle climbs"]
    - [1000, 1500, "moderate climbs"]
    - [1500, 2000, "moderate climbs"]
    - [2000, 2500, "strenuous climbs"]
    - [2500, 3000, "very strenuous"]
    - [3000, 3500, "expert level"]
    - [3500, 4000, "expert level"]
    - [4000, 4500, "expert level"]
  
  # Elevation gain rate ranges (11 ranges, 0-150+ m/km, predefined)
  elevationGainRateMetersPerKm:        # ❌ Not used - no bin generation
    - [0, 15, "0–15 m/km"]
    - [15, 30, "15–30 m/km"]
    - [30, 45, "30–45 m/km"]
    - [45, 60, "45–60 m/km"]
    - [60, 75, "60–75 m/km"]
    - [75, 90, "75–90 m/km"]
    - [90, 105, "90–105 m/km"]
    - [105, 120, "105–120 m/km"]
    - [120, 135, "120–135 m/km"]
    - [135, 150, "135–150 m/km"]
    - [150, null, "> 150 m/km"]

# ❌ NOT ACTIVELY USED: Route shapes are not used in code
#     Route discovery doesn't implement shape-based discovery
routeShapes:
  - "loop"           # ❌ Not used - no shape-based discovery
  - "out-and-back"   # ❌ Not used - no shape-based discovery
  # - "lollipop"       # ❌ Not used - no shape-based discovery
  # - "point-to-point" # ❌ Not used - no shape-based discovery
  # - "figure-eight"   # ❌ Not used - no shape-based discovery
  # - "star"           # ❌ Not used - no shape-based discovery

# ✅ ACTIVELY USED: Discovery settings are used in SQL generation scripts
#    and test files, but not in main application code
discovery:
  # Maximum routes to discover per bin combination
  maxRoutesPerBin: 10                  # ✅ Used in generate-configurable-sql.js
  
  # Quality threshold for route scoring (0.0-1.0)
  minRouteScore: 0.3                   # ✅ Used in generate-configurable-sql.js
  
  # Minimum route distance (km)
  minRouteDistanceKm  : 1.0            # ✅ Used in generate-configurable-sql.js
  
  # Minimum elevation gain (meters)
  minElevationGainMeters: 10           # ✅ Used in generate-configurable-sql.js
  
  # Maximum route distance (km)
  maxRouteDistanceKm: 20.0             # ✅ Used in generate-configurable-sql.js
  
  # Maximum elevation gain (meters)
  maxElevationGainMeters: 5000         # ✅ Used in generate-configurable-sql.js
  
  # ❌ NOT ACTIVELY USED: Route discovery algorithms are not implemented
  algorithms:                           # ❌ Not used - no algorithm selection
    - "dijkstra"      # ❌ Not used - no algorithm selection
    - "ksp"           # ❌ Not used - no algorithm selection
    - "drivingDistance" # ❌ Not used - no algorithm selection
  
  # Layer processing timeout (in milliseconds)
  timeout:
    processingTimeoutMs: 300000          # 5 minutes for Layer 3 routing processing

# ✅ ACTIVELY USED: Route scoring weights are used in SQL generation scripts
#    and test files, but not in main application code
scoring:
  # Distance matching weight (0.0-1.0)
  distanceWeight: 0.4                   # ✅ Used in generate-configurable-sql.js
  
  # Elevation matching weight (0.0-1.0)
  elevationWeight: 0.3                  # ✅ Used in generate-configurable-sql.js
  
  # Route quality weight (0.0-1.0)
  qualityWeight: 0.3                    # ✅ Used in generate-configurable-sql.js

# ✅ NEW: Recommendation tolerance levels for route generation
#    These control how flexible the system is when matching target distances/elevations
recommendationTolerances:
  # Strict tolerance - very close to target values (±10% distance, ±15% elevation)
  strict:
    distance: 10                        # 10% tolerance for distance matching (close to target)
    elevation: 15                       # 15% tolerance for elevation matching (close to target)
    quality: 1.0                        # Highest quality score for strict matches
  
  # Medium tolerance - moderate flexibility (±25% distance, ±35% elevation)
  medium:
    distance: 25                        # 25% tolerance for distance matching (moderate flexibility)
    elevation: 35                       # 35% tolerance for elevation matching (moderate flexibility)
    quality: 0.8                        # High quality score for medium matches
  
  # Wide tolerance - very flexible matching (±50% distance, ±75% elevation)
  wide:
    distance: 50                        # 50% tolerance for distance matching (very flexible)
    elevation: 75                       # 75% tolerance for elevation matching (very flexible)
    quality: 0.6                        # Lower quality score for wide matches
  
  # Custom tolerance - user-defined flexibility (±35% distance, ±50% elevation)
  custom:
    distance: 35                        # 35% tolerance for distance matching (balanced flexibility)
    elevation: 50                       # 50% tolerance for elevation matching (balanced flexibility)
    quality: 0.9                        # Custom quality score

# ✅ ACTIVELY USED: Cost weighting is used in SQL generation scripts
#    and test files, but not in main application code
costWeighting:
  # Steepness weight (higher = avoid steep trails more)
  steepnessWeight: 2.0                  # ✅ Used in generate-configurable-sql.js
  
  # Distance weight (higher = prefer shorter routes more)
  distanceWeight: 0.5                   # ✅ Used in generate-configurable-sql.js
  
  # Cost calculation: (steepness * steepnessWeight) + (distance * distanceWeight)
  # Example: steepness 50m/km + distance 5km = (50 * 2.0) + (5 * 0.5) = 100 + 2.5 = 102.5

  # ✅ NEW: Cost routing modes for different use cases
  routingModes:
    # Standard routing - prefer lower cost (less steep, shorter routes)
    standard:
      enabled: true
      description: "Standard routing - prefer lower cost routes (less steep, shorter)"
      orderDirection: "ASC"              # Lower cost first
      steepnessWeight: 2.0
      distanceWeight: 0.5
    
    # Most cost routing - prefer higher cost (steeper, longer routes)
    mostCost:
      enabled: true
      description: "Most cost routing - prefer higher cost routes (steeper, longer)"
      orderDirection: "DESC"             # Higher cost first
      steepnessWeight: 2.0
      distanceWeight: 0.5
    
    # Elevation-focused routing - maximize elevation gain
    elevationFocused:
      enabled: true
      description: "Elevation-focused routing - maximize elevation gain per distance"
      orderDirection: "DESC"             # Higher elevation gain first
      steepnessWeight: 5.0               # Much higher weight on steepness
      distanceWeight: 0.1                # Lower weight on distance
    
    # Distance-focused routing - minimize distance
    distanceFocused:
      enabled: true
      description: "Distance-focused routing - minimize total distance"
      orderDirection: "ASC"              # Lower distance first
      steepnessWeight: 0.5               # Lower weight on steepness
      distanceWeight: 2.0                # Higher weight on distance
    
    # Balanced routing - equal weights
    balanced:
      enabled: true
      description: "Balanced routing - equal consideration of steepness and distance"
      orderDirection: "ASC"              # Lower cost first
      steepnessWeight: 1.0
      distanceWeight: 1.0

  # ❌ NOT ACTIVELY USED: Quality factors are not implemented
  factors:                              # ❌ Not used - no quality factor processing
    # Prefer routes with fewer road crossings
    roadCrossingPenalty: 0.1            # ❌ Not used - no road crossing detection
    
    # Prefer routes with good trail connectivity
    connectivityBonus: 0.2              # ❌ Not used - no connectivity analysis
    
    # Prefer routes with scenic views (if elevation data available)
    scenicBonus: 0.1                    # ❌ Not used - no scenic analysis
    
    # Penalty for routes with too much elevation gain/loss
    elevationVariationPenalty: 0.1      # ❌ Not used - no elevation variation analysis

# ❌ NOT ACTIVELY USED: Region-specific overrides are not implemented
#     The route discovery system doesn't support region-specific configuration
regionOverrides:
  # Example: Mountain regions might have different elevation bins
  mountain:                             # ❌ Not used - no region-specific config
    binConfiguration:
      distance:
        binCount: 5                     # ❌ Not used - no region-specific config
        minDistance: 1.0                # ❌ Not used - no region-specific config
        maxDistance: 15.0               # ❌ Not used - no region-specific config
        customBinEdges: [1, 3, 6, 10, 15] # ❌ Not used - no region-specific config
      elevation:
        binCount: 5                     # ❌ Not used - no region-specific config
        minElevation: 1                 # ❌ Not used - no region-specific config
        maxElevation: 3000              # ❌ Not used - no region-specific config
        customBinEdges: [1, 500, 1000, 2000, 3000] # ❌ Not used - no region-specific config
      elevationGainRate:
        binCount: 3                     # ❌ Not used - no region-specific config
        minGainRate: 0                  # ❌ Not used - no region-specific config
        maxGainRate: 400                # ❌ Not used - no region-specific config
        customBinEdges: [0, 100, 200, 400] # ❌ Not used - no region-specific config
  
  # Example: Urban regions might have different distance bins
  urban:                               # ❌ Not used - no region-specific config
    binConfiguration:
      distance:
        binCount: 5                     # ❌ Not used - no region-specific config
        minDistance: 1.0                # ❌ Not used - no region-specific config
        maxDistance: 8.0                # ❌ Not used - no region-specific config
        customBinEdges: [1, 3, 5, 8]   # ❌ Not used - no region-specific config
      elevation:
        binCount: 3                     # ❌ Not used - no region-specific config
        minElevation: 1                 # ❌ Not used - no region-specific config
        maxElevation: 200               # ❌ Not used - no region-specific config
        customBinEdges: [1, 50, 100, 200] # ❌ Not used - no region-specific config
    routeShapes:                        # ❌ Not used - no region-specific config
      - "loop"                          # ❌ Not used - no region-specific config
      - "out-and-back"                  # ❌ Not used - no region-specific config
  
  # Example: Flat regions might disable elevation gain rate
  flat:                                # ❌ Not used - no region-specific config
    binConfiguration:
      distance:
        binCount: 5                     # ❌ Not used - no region-specific config
        minDistance: 1.0                # ❌ Not used - no region-specific config
        maxDistance: 10.0               # ❌ Not used - no region-specific config
        widthType: "fixed"              # ❌ Not used - no region-specific config
      elevation:
        binCount: 2                     # ❌ Not used - no region-specific config
        minElevation: 1                 # ❌ Not used - no region-specific config
        maxElevation: 100               # ❌ Not used - no region-specific config
        customBinEdges: [1, 50, 100]   # ❌ Not used - no region-specific config
      elevationGainRate:
        enabled: false                  # ❌ Not used - no region-specific config 