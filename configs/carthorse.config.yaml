# CARTHORSE Configuration File
# This file contains project-wide settings, versioning, and defaults

# Version Information
version: "1.10.6"
cliVersion: "1.10.6"

# Database Configuration
# ✅ ACTIVELY USED: These database settings are automatically loaded
database:
  # Default database connection settings
  # These can be overridden by environment variables
  connection:
    host: "localhost"
    port: 5432
    user: "carthorse"
    password: ""  # Leave empty to use PGPASSWORD env var
    database: "trail_master_db"
    
  # Environment-specific database configurations
  environments:
    development:
      host: "localhost"
      port: 5432
      user: "carthorse"
      password: ""
      database: "trail_master_db"
      
    test:
      host: "localhost"
      port: 5432
      user: "carthorse"
      password: ""
      database: "trail_master_db_test"
      
    production:
      host: "localhost"
      port: 5432
      user: "carthorse"
      password: ""
      database: "trail_master_db"
  
  # Connection pool settings
  pool:
    max: 20
    idleTimeoutMillis: 30000
    connectionTimeoutMillis: 10000
  
  # Timeout settings
  timeouts:
    connectionTimeout: 30000
    queryTimeout: 60000

# Application Constants
constants:
  carthorseVersion: "1.0.0"
  
  # Supported regions for data processing
  supportedRegions:
    - "boulder"
    - "seattle"
    - "denver"
    - "portland"
    - "san-francisco"
  
  # Supported environments
  supportedEnvironments:
    - "default"
    - "bbox-phase2"
    - "test"
  
  # Database schema names
  databaseSchemas:
    master: "public"
    stagingPrefix: "staging_"
    osmPrefix: "osm_"
  
  # Validation thresholds
  validationThresholds:
    minTrailLengthKm: 0.001
    maxTrailLengthKm: 1000
    minElevationM: -1000
    maxElevationM: 9000
    minCoordinatePoints: 2
    maxCoordinatePoints: 10000
  
  # Export settings
  exportSettings:
    defaultSimplifyTolerance: 0.001
    defaultMaxDbSizeMb: 400
    defaultTargetSizeMb: 100

# PostGIS Master Database Configuration
postgis:
  # Schema version for the PostGIS master database
  schemaVersion: 8
  schemaDescription: "Enhanced PostgreSQL processed: split trails with routing graph and elevation field"
  
  # Database connection settings (can be overridden by environment variables)
  # ⚠️  NOT ACTIVELY USED: These connection settings are not used in the codebase
  #     Connection is handled via environment variables (PGHOST, PGPORT, etc.)
  connection:
    defaultHost: "localhost"          # ❌ Not used - uses PGHOST env var
    defaultPort: 5432                 # ❌ Not used - uses PGPORT env var
    defaultUser: "tester"             # ❌ Not used - uses PGUSER env var
    
    # Database names
    testDatabase: "trail_master_db_test"      # ❌ Not used - uses PGDATABASE env var
    productionDatabase: "trail_master_db"      # ❌ Not used - uses PGDATABASE env var
    
    # Connection timeouts
    connectionTimeout: 30000          # ❌ Not used - no timeout handling in code
    queryTimeout: 60000               # ❌ Not used - no query timeout handling
  
  # Processing settings for PostGIS operations
  processing:
    # ✅ ACTIVELY USED: These parameters are used in SQL generation scripts
    #    and some test files, but not in main application code
    defaultIntersectionTolerance: 0.5    # ✅ Used in generate-configurable-sql.js - Precise tolerance for routing
    maxIntersectionTolerance: 5.0        # ❌ Not used - no max validation
    
    # ✅ ACTIVELY USED: Used in CLI, orchestrator, and SQL generation
    defaultSimplifyTolerance: 0.001      # ✅ Used in CLI, orchestrator, tests
    maxSimplifyTolerance: 0.01           # ❌ Not used - no max validation
    
    # ✅ ACTIVELY USED: Used in SQL generation scripts
    defaultBatchSize: 1000               # ✅ Used in generate-configurable-sql.js
    maxBatchSize: 5000                   # ❌ Not used - no max validation
    
    # ✅ ACTIVELY USED: Used in SQL generation scripts
    defaultTimeoutMs: 30000              # ✅ Used in generate-configurable-sql.js
    maxTimeoutMs: 300000                 # ❌ Not used - no max validation
    
    # ✅ NEW: pgRouting network creation tolerances
    pgrouting:
      # Tolerance for detecting trail intersections (degrees)
      intersectionDetectionTolerance: 0.001    # ~100 meters - for finding trail intersections
      
      # Tolerance for connecting edges to vertices (degrees) 
      edgeToVertexTolerance: 0.001            # ~100 meters - for connecting edges to nodes
      
      # Tolerance for graph analysis (degrees)
      graphAnalysisTolerance: 0.001           # ~100 meters - for pgr_analyzeGraph
      
      # Tolerance for preserving true loop trails (meters)
      trueLoopTolerance: 10.0                  # 10 meters - for identifying true loop trails
      
      # Minimum trail length for inclusion (meters)
      minTrailLengthMeters: 0.1               # 0.1 meters - minimum trail length to include
      
      # Maximum trail length for processing (meters)
      maxTrailLengthMeters: 100000             # 100km - maximum trail length to process

# SQLite Export Database Configuration
sqlite:
  # Schema version is automatically read from sql/schemas/carthorse-sqlite-schema-v14.sql
  # schemaVersion: 14  # Removed - now read from SQL file
  # schemaDescription: "Carthorse SQLite Export v14.0 (Enhanced Route Recommendations + Trail Composition)"  # Removed - now read from SQL file
  
  # Export settings
  export:
    # ❌ NOT ACTIVELY USED: These default settings are not used in code
    #     CLI options override these defaults
    defaultReplace: false               # ❌ Not used - CLI --replace option
    defaultValidate: false              # ❌ Not used - CLI --validate option
    defaultVerbose: false               # ❌ Not used - CLI --verbose option
    defaultSkipBackup: true             # ❌ Not used - CLI --skip-backup option
    defaultSkipIncompleteTrails: false  # ❌ Not used - CLI --skip-incomplete-trails option
    
    # Output formats
    supportedFormats:                   # ❌ Not used - only SQLite supported
      - "sqlite"
    
    # Database size limits
    # TODO: Need to reimplement adaptive tolerance, path simplification, and estimate database size code
    # The infrastructure exists but the core PostGIS implementation is missing:
    # - calculateAdaptiveTolerance() - adaptive tolerance calculation based on target size
    # - estimateDatabaseSize() - database size estimation using PostGIS
    # - simplifyGeometryWithCounts() - geometry simplification with point count tracking
    
    # ✅ ACTIVELY USED: These parameters are used in CLI and orchestrator
    maxSqliteDbSizeMB: 400             # ✅ Used in CLI, orchestrator, tests
    targetSizeMB: 100                  # ✅ Used in CLI, orchestrator
    simplifyTolerance: 0.001           # ✅ Used in CLI, orchestrator
    
    # ❌ NOT ACTIVELY USED: Output filename settings not used
    outputFilenameFormat: "{region}.db" # ❌ Not used - CLI --out option
    defaultOutputDirectory: "./data"    # ❌ Not used - CLI --out option

# Validation Configuration
validation:
  # ❌ NOT ACTIVELY USED: These validation flags are not used in code
  #     Validation is controlled via CLI options
  checkElevationData: true             # ❌ Not used - no elevation validation in code
  checkGeometryValidity: true          # ❌ Not used - no geometry validation in code
  checkRoutingGraph: true              # ❌ Not used - no routing validation in code
  
  # ❌ NOT ACTIVELY USED: These thresholds are not used in code
  minTrailCount: 1                     # ❌ Not used - no trail count validation
  maxNodeToTrailRatio: 0.5            # ❌ Not used - no ratio validation
  minRoutingEdges: 1                   # ❌ Not used - no edge validation
  
  # ✅ ACTIVELY USED: These validation thresholds are used in SQL generation scripts
  #    and some test files, but not in main application validation
  minTrailLengthMeters: 1              # ✅ Used in generate-configurable-sql.js
  maxTrailLengthMeters: 100000         # ✅ Used in generate-configurable-sql.js
  minElevationMeters: 0                # ✅ Used in generate-configurable-sql.js
  maxElevationMeters: 9000             # ✅ Used in generate-configurable-sql.js
  minCoordinatePoints: 2               # ✅ Used in generate-configurable-sql.js
  maxCoordinatePoints: 10000           # ✅ Used in generate-configurable-sql.js

# Route discovery configuration is now in configs/route-discovery.config.yaml

# Logging Configuration
# ❌ NOT ACTIVELY USED: Logging configuration is not used in code
#     Logging is handled via console.log and environment variables
logging:
  defaultLevel: "info"                 # ❌ Not used - no structured logging
  levels:                              # ❌ Not used - no log level system
    - "error"
    - "warn"
    - "info"
    - "debug"
  
  # Console output
  useColors: true                      # ❌ Not used - no color configuration
  showTimestamps: true                 # ❌ Not used - no timestamp configuration
  
  # File logging (optional)
  logToFile: false                     # ❌ Not used - no file logging
  logFilePath: "./logs/carthorse.log"  # ❌ Not used - no file logging

# Safety Configuration
# ❌ NOT ACTIVELY USED: Safety settings are not implemented in code
safety:
  # Database safety
  requireTestEnvironment: true         # ❌ Not used - no environment validation
  preventProductionWrites: true        # ❌ Not used - no production protection
  
  # Environment validation
  validateEnvironment: true            # ❌ Not used - no environment validation
  checkDatabaseUser: true              # ❌ Not used - no user validation
  
  # Backup settings
  autoBackup: true                     # ❌ Not used - no automatic backup
  backupRetentionDays: 7              # ❌ Not used - no backup management

# Development Configuration
# ❌ NOT ACTIVELY USED: Development settings are not used in code
development:
  # Test settings
  testDatabase: "trail_master_db_test" # ❌ Not used - uses env vars
  testUser: "tester"                   # ❌ Not used - uses env vars
  
  # Debug settings
  enableDebugMode: false               # ❌ Not used - no debug mode
  showSQLQueries: false                # ❌ Not used - no SQL query logging
  
  # Performance monitoring
  enablePerformanceLogging: false      # ❌ Not used - no performance monitoring
  logSlowQueries: true                 # ❌ Not used - no slow query detection
  slowQueryThresholdMs: 1000          # ❌ Not used - no threshold checking 