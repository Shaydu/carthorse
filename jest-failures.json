{"numFailedTestSuites":8,"numFailedTests":14,"numPassedTestSuites":6,"numPassedTests":65,"numPendingTestSuites":2,"numPendingTests":4,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":16,"numTotalTests":83,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1753291597468,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["Routing Graph Export Pipeline"],"duration":323,"failureDetails":[{"length":207,"name":"error","severity":"ERROR","code":"22023","where":"PL/pgSQL function staging_boulder_1753291597627.build_routing_nodes(text,text,double precision) line 10 at assignment","file":"varlena.c","line":"5889","routine":"text_format"}],"failureMessages":["error: too few arguments for format()\n    at /Users/shaydu/dev/carthorse/node_modules/pg/lib/client.js:545:17\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at buildRoutingGraphHelper (/Users/shaydu/dev/carthorse/src/utils/sql/routing.ts:26:24)\n    at EnhancedPostgresOrchestrator.buildRoutingGraph (/Users/shaydu/dev/carthorse/src/orchestrator/EnhancedPostgresOrchestrator.ts:615:57)\n    at EnhancedPostgresOrchestrator.run (/Users/shaydu/dev/carthorse/src/orchestrator/EnhancedPostgresOrchestrator.ts:241:7)\n    at Object.<anonymous> (/Users/shaydu/dev/carthorse/src/__tests__/routing-graph-export.test.ts:81:5)"],"fullName":"Routing Graph Export Pipeline orchestrator exports routing_nodes and routing_edges with correct schema and data for boulder","invocations":1,"location":{"column":3,"line":60},"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"orchestrator exports routing_nodes and routing_edges with correct schema and data for boulder"},{"ancestorTitles":["Routing Graph Export Pipeline"],"duration":124,"failureDetails":[{"length":207,"name":"error","severity":"ERROR","code":"22023","where":"PL/pgSQL function staging_seattle_1753291597951.build_routing_nodes(text,text,double precision) line 10 at assignment","file":"varlena.c","line":"5889","routine":"text_format"}],"failureMessages":["error: too few arguments for format()\n    at /Users/shaydu/dev/carthorse/node_modules/pg/lib/client.js:545:17\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at buildRoutingGraphHelper (/Users/shaydu/dev/carthorse/src/utils/sql/routing.ts:26:24)\n    at EnhancedPostgresOrchestrator.buildRoutingGraph (/Users/shaydu/dev/carthorse/src/orchestrator/EnhancedPostgresOrchestrator.ts:615:57)\n    at EnhancedPostgresOrchestrator.run (/Users/shaydu/dev/carthorse/src/orchestrator/EnhancedPostgresOrchestrator.ts:241:7)\n    at Object.<anonymous> (/Users/shaydu/dev/carthorse/src/__tests__/routing-graph-export.test.ts:227:5)"],"fullName":"Routing Graph Export Pipeline orchestrator exports routing_nodes and routing_edges with correct schema and data for seattle","invocations":1,"location":{"column":3,"line":206},"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"orchestrator exports routing_nodes and routing_edges with correct schema and data for seattle"}],"endTime":1753291598089,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mRouting Graph Export Pipeline › orchestrator exports routing_nodes and routing_edges with correct schema and data for boulder\u001b[39m\u001b[22m\n\n    error: too few arguments for format()\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 24 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 25 |\u001b[39m   \u001b[90m// Create routing nodes using PostGIS function\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 26 |\u001b[39m   \u001b[36mconst\u001b[39m nodeCountRes \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m pgClient\u001b[33m.\u001b[39mquery(\u001b[32m`\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 27 |\u001b[39m \u001b[32m    SELECT ${stagingSchema}.build_routing_nodes('${stagingSchema}', '${trailsTable}', ${intersectionTolerance})\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 28 |\u001b[39m \u001b[32m  `\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 29 |\u001b[39m   \u001b[36mconst\u001b[39m nodeCount \u001b[33m=\u001b[39m nodeCountRes\u001b[33m.\u001b[39mrows[\u001b[35m0\u001b[39m]\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mbuild_routing_nodes \u001b[33m?\u001b[39m\u001b[33m?\u001b[39m \u001b[35m0\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/pg/lib/client.js\u001b[2m:545:17\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat buildRoutingGraphHelper (\u001b[22m\u001b[2msrc/utils/sql/routing.ts\u001b[2m:26:24)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat EnhancedPostgresOrchestrator.buildRoutingGraph (\u001b[22m\u001b[2msrc/orchestrator/EnhancedPostgresOrchestrator.ts\u001b[2m:615:57)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat EnhancedPostgresOrchestrator.run (\u001b[22m\u001b[2msrc/orchestrator/EnhancedPostgresOrchestrator.ts\u001b[2m:241:7)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/routing-graph-export.test.ts\u001b[39m\u001b[0m\u001b[2m:81:5)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mRouting Graph Export Pipeline › orchestrator exports routing_nodes and routing_edges with correct schema and data for seattle\u001b[39m\u001b[22m\n\n    error: too few arguments for format()\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 24 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 25 |\u001b[39m   \u001b[90m// Create routing nodes using PostGIS function\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 26 |\u001b[39m   \u001b[36mconst\u001b[39m nodeCountRes \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m pgClient\u001b[33m.\u001b[39mquery(\u001b[32m`\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 27 |\u001b[39m \u001b[32m    SELECT ${stagingSchema}.build_routing_nodes('${stagingSchema}', '${trailsTable}', ${intersectionTolerance})\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 28 |\u001b[39m \u001b[32m  `\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 29 |\u001b[39m   \u001b[36mconst\u001b[39m nodeCount \u001b[33m=\u001b[39m nodeCountRes\u001b[33m.\u001b[39mrows[\u001b[35m0\u001b[39m]\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mbuild_routing_nodes \u001b[33m?\u001b[39m\u001b[33m?\u001b[39m \u001b[35m0\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/pg/lib/client.js\u001b[2m:545:17\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat buildRoutingGraphHelper (\u001b[22m\u001b[2msrc/utils/sql/routing.ts\u001b[2m:26:24)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat EnhancedPostgresOrchestrator.buildRoutingGraph (\u001b[22m\u001b[2msrc/orchestrator/EnhancedPostgresOrchestrator.ts\u001b[2m:615:57)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat EnhancedPostgresOrchestrator.run (\u001b[22m\u001b[2msrc/orchestrator/EnhancedPostgresOrchestrator.ts\u001b[2m:241:7)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/routing-graph-export.test.ts\u001b[39m\u001b[0m\u001b[2m:227:5)\u001b[22m\u001b[2m\u001b[22m\n","name":"/Users/shaydu/dev/carthorse/src/__tests__/routing-graph-export.test.ts","startTime":1753291597488,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Intersection Detection Validation - Boulder Region"],"duration":193,"failureDetails":[{"length":207,"name":"error","severity":"ERROR","code":"22023","where":"PL/pgSQL function staging_boulder_1753291598162.build_routing_nodes(text,text,double precision) line 10 at assignment","file":"varlena.c","line":"5889","routine":"text_format"}],"failureMessages":["error: too few arguments for format()\n    at /Users/shaydu/dev/carthorse/node_modules/pg/lib/client.js:545:17\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at buildRoutingGraphHelper (/Users/shaydu/dev/carthorse/src/utils/sql/routing.ts:26:24)\n    at EnhancedPostgresOrchestrator.buildRoutingGraph (/Users/shaydu/dev/carthorse/src/orchestrator/EnhancedPostgresOrchestrator.ts:615:57)\n    at EnhancedPostgresOrchestrator.run (/Users/shaydu/dev/carthorse/src/orchestrator/EnhancedPostgresOrchestrator.ts:241:7)\n    at Object.<anonymous> (/Users/shaydu/dev/carthorse/src/__tests__/spatial/intersection-detection-validation.test.ts:141:5)"],"fullName":"Intersection Detection Validation - Boulder Region validates intersection detection algorithm with comprehensive reference values","invocations":1,"location":{"column":3,"line":109},"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"validates intersection detection algorithm with comprehensive reference values"},{"ancestorTitles":["Intersection Detection Validation - Boulder Region"],"duration":5,"failureDetails":[{"code":"SQLITE_CANTOPEN"}],"failureMessages":["SqliteError: unable to open database file\n    at new Database (/Users/shaydu/dev/carthorse/node_modules/better-sqlite3/lib/database.js:69:26)\n    at Object.<anonymous> (/Users/shaydu/dev/carthorse/src/__tests__/spatial/intersection-detection-validation.test.ts:378:16)\n    at Promise.then.completed (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/shaydu/dev/carthorse/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/shaydu/dev/carthorse/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Intersection Detection Validation - Boulder Region validates intersection detection edge cases and error handling","invocations":1,"location":{"column":3,"line":374},"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"validates intersection detection edge cases and error handling"},{"ancestorTitles":["Intersection Detection Validation - Boulder Region"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"Intersection Detection Validation - Boulder Region provides detailed intersection detection reference documentation","invocations":1,"location":{"column":3,"line":433},"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"provides detailed intersection detection reference documentation"}],"endTime":1753291598371,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mIntersection Detection Validation - Boulder Region › validates intersection detection algorithm with comprehensive reference values\u001b[39m\u001b[22m\n\n    error: too few arguments for format()\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 24 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 25 |\u001b[39m   \u001b[90m// Create routing nodes using PostGIS function\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 26 |\u001b[39m   \u001b[36mconst\u001b[39m nodeCountRes \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m pgClient\u001b[33m.\u001b[39mquery(\u001b[32m`\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 27 |\u001b[39m \u001b[32m    SELECT ${stagingSchema}.build_routing_nodes('${stagingSchema}', '${trailsTable}', ${intersectionTolerance})\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 28 |\u001b[39m \u001b[32m  `\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 29 |\u001b[39m   \u001b[36mconst\u001b[39m nodeCount \u001b[33m=\u001b[39m nodeCountRes\u001b[33m.\u001b[39mrows[\u001b[35m0\u001b[39m]\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mbuild_routing_nodes \u001b[33m?\u001b[39m\u001b[33m?\u001b[39m \u001b[35m0\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/pg/lib/client.js\u001b[2m:545:17\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat buildRoutingGraphHelper (\u001b[22m\u001b[2msrc/utils/sql/routing.ts\u001b[2m:26:24)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat EnhancedPostgresOrchestrator.buildRoutingGraph (\u001b[22m\u001b[2msrc/orchestrator/EnhancedPostgresOrchestrator.ts\u001b[2m:615:57)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat EnhancedPostgresOrchestrator.run (\u001b[22m\u001b[2msrc/orchestrator/EnhancedPostgresOrchestrator.ts\u001b[2m:241:7)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/spatial/intersection-detection-validation.test.ts\u001b[39m\u001b[0m\u001b[2m:141:5)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mIntersection Detection Validation - Boulder Region › validates intersection detection edge cases and error handling\u001b[39m\u001b[22m\n\n    SqliteError: unable to open database file\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 376 |\u001b[39m     \u001b[22m\n\u001b[2m     \u001b[90m 377 |\u001b[39m     \u001b[90m// This test validates that the algorithm handles edge cases correctly\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 378 |\u001b[39m     \u001b[36mconst\u001b[39m db \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mDatabase\u001b[39m(\u001b[33mBOULDER_OUTPUT_PATH\u001b[39m\u001b[33m,\u001b[39m { readonly\u001b[33m:\u001b[39m \u001b[36mtrue\u001b[39m })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 379 |\u001b[39m     db\u001b[33m.\u001b[39mloadExtension(\u001b[32m'/opt/homebrew/lib/mod_spatialite.dylib'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 380 |\u001b[39m     \u001b[22m\n\u001b[2m     \u001b[90m 381 |\u001b[39m     \u001b[90m// Test 1: No nodes should have null coordinates\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat new Database (\u001b[22m\u001b[2mnode_modules/better-sqlite3/lib/database.js\u001b[2m:69:26)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/spatial/intersection-detection-validation.test.ts\u001b[39m\u001b[0m\u001b[2m:378:16)\u001b[22m\u001b[2m\u001b[22m\n","name":"/Users/shaydu/dev/carthorse/src/__tests__/spatial/intersection-detection-validation.test.ts","startTime":1753291598136,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Spatial Function Optimization Tests","PostGIS Spatial Functions"],"duration":48,"failureDetails":[],"failureMessages":[],"fullName":"Spatial Function Optimization Tests PostGIS Spatial Functions should use ST_Intersects for intersection detection","invocations":1,"location":{"column":5,"line":35},"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should use ST_Intersects for intersection detection"},{"ancestorTitles":["Spatial Function Optimization Tests","PostGIS Spatial Functions"],"duration":27,"failureDetails":[],"failureMessages":[],"fullName":"Spatial Function Optimization Tests PostGIS Spatial Functions should use ST_DWithin for proximity queries","invocations":1,"location":{"column":5,"line":50},"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should use ST_DWithin for proximity queries"},{"ancestorTitles":["Spatial Function Optimization Tests","PostGIS Spatial Functions"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Spatial Function Optimization Tests PostGIS Spatial Functions should use ST_Within for spatial containment","invocations":1,"location":{"column":5,"line":65},"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should use ST_Within for spatial containment"},{"ancestorTitles":["Spatial Function Optimization Tests","PostGIS Spatial Functions"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Spatial Function Optimization Tests PostGIS Spatial Functions should use ST_Envelope for efficient bbox calculations","invocations":1,"location":{"column":5,"line":80},"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should use ST_Envelope for efficient bbox calculations"},{"ancestorTitles":["Spatial Function Optimization Tests","Spatial Indexes"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Spatial Function Optimization Tests Spatial Indexes should have spatial indexes on geometry columns","invocations":1,"location":{"column":5,"line":100},"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have spatial indexes on geometry columns"},{"ancestorTitles":["Spatial Function Optimization Tests","Spatial Indexes"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Spatial Function Optimization Tests Spatial Indexes should have spatial indexes on routing nodes","invocations":1,"location":{"column":5,"line":146},"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have spatial indexes on routing nodes"},{"ancestorTitles":["Spatial Function Optimization Tests","Data Validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Spatial Function Optimization Tests Data Validation should validate geometry validity using ST_IsValid","invocations":1,"location":{"column":5,"line":194},"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate geometry validity using ST_IsValid"},{"ancestorTitles":["Spatial Function Optimization Tests","Data Validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Spatial Function Optimization Tests Data Validation should ensure coordinate system consistency (SRID 4326)","invocations":1,"location":{"column":5,"line":204},"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should ensure coordinate system consistency (SRID 4326)"},{"ancestorTitles":["Spatial Function Optimization Tests","Data Validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Spatial Function Optimization Tests Data Validation should validate intersection nodes have proper trail connections","invocations":1,"location":{"column":5,"line":214},"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate intersection nodes have proper trail connections"},{"ancestorTitles":["Spatial Function Optimization Tests","Enhanced Validation Functions"],"duration":17,"failureDetails":[],"failureMessages":[],"fullName":"Spatial Function Optimization Tests Enhanced Validation Functions should run enhanced spatial validation","invocations":1,"location":{"column":5,"line":234},"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should run enhanced spatial validation"},{"ancestorTitles":["Spatial Function Optimization Tests","Enhanced Validation Functions"],"duration":2,"failureDetails":[{"matcherResult":{"actual":109,"expected":0,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m0\u001b[39m\nReceived: \u001b[31m109\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m0\u001b[39m\nReceived: \u001b[31m109\u001b[39m\n    at Object.<anonymous> (/Users/shaydu/dev/carthorse/src/__tests__/spatial-optimization.test.ts:255:44)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"Spatial Function Optimization Tests Enhanced Validation Functions should validate spatial containment","invocations":1,"location":{"column":5,"line":248},"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should validate spatial containment"},{"ancestorTitles":["Spatial Function Optimization Tests","Performance Optimization"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"Spatial Function Optimization Tests Performance Optimization should use bounding box pre-filtering for spatial joins","invocations":1,"location":{"column":5,"line":260},"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should use bounding box pre-filtering for spatial joins"},{"ancestorTitles":["Spatial Function Optimization Tests","Performance Optimization"],"duration":25,"failureDetails":[],"failureMessages":[],"fullName":"Spatial Function Optimization Tests Performance Optimization should use spatial indexes for distance calculations","invocations":1,"location":{"column":5,"line":276},"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should use spatial indexes for distance calculations"},{"ancestorTitles":["Spatial Function Optimization Tests","API Endpoint Enhancement"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Spatial Function Optimization Tests API Endpoint Enhancement should support spatial filtering for bbox queries","invocations":1,"location":{"column":5,"line":293},"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should support spatial filtering for bbox queries"},{"ancestorTitles":["Spatial Function Optimization Tests","API Endpoint Enhancement"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Spatial Function Optimization Tests API Endpoint Enhancement should validate intersection data integrity","invocations":1,"location":{"column":5,"line":308},"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate intersection data integrity"}],"endTime":1753291598581,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mSpatial Function Optimization Tests › Enhanced Validation Functions › should validate spatial containment\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m0\u001b[39m\n    Received: \u001b[31m109\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 253 |\u001b[39m \u001b[32m        WHERE bbox_min_lng < $1 OR bbox_max_lng > $2 OR bbox_min_lat < $3 OR bbox_max_lat > $4\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 254 |\u001b[39m \u001b[32m      `\u001b[39m\u001b[33m,\u001b[39m [minLng\u001b[33m,\u001b[39m maxLng\u001b[33m,\u001b[39m minLat\u001b[33m,\u001b[39m maxLat])\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 255 |\u001b[39m       expect(\u001b[33mNumber\u001b[39m(result\u001b[33m.\u001b[39mrows[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mcount))\u001b[33m.\u001b[39mtoBe(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                            \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 256 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 257 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 258 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/spatial-optimization.test.ts\u001b[39m\u001b[0m\u001b[2m:255:44)\u001b[22m\u001b[2m\u001b[22m\n","name":"/Users/shaydu/dev/carthorse/src/__tests__/spatial-optimization.test.ts","startTime":1753291598394,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Simple Intersection Detection Validation - Seattle Region"],"duration":119,"failureDetails":[{"length":207,"name":"error","severity":"ERROR","code":"22023","where":"PL/pgSQL function staging_seattle_1753291598613.build_routing_nodes(text,text,double precision) line 10 at assignment","file":"varlena.c","line":"5889","routine":"text_format"}],"failureMessages":["error: too few arguments for format()\n    at /Users/shaydu/dev/carthorse/node_modules/pg/lib/client.js:545:17\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at buildRoutingGraphHelper (/Users/shaydu/dev/carthorse/src/utils/sql/routing.ts:26:24)\n    at EnhancedPostgresOrchestrator.buildRoutingGraph (/Users/shaydu/dev/carthorse/src/orchestrator/EnhancedPostgresOrchestrator.ts:615:57)\n    at EnhancedPostgresOrchestrator.run (/Users/shaydu/dev/carthorse/src/orchestrator/EnhancedPostgresOrchestrator.ts:241:7)\n    at Object.<anonymous> (/Users/shaydu/dev/carthorse/src/__tests__/spatial/intersection-detection-simple.test.ts:134:5)"],"fullName":"Simple Intersection Detection Validation - Seattle Region validates intersection detection algorithm with Seattle dataset","invocations":1,"location":{"column":3,"line":102},"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"validates intersection detection algorithm with Seattle dataset"},{"ancestorTitles":["Simple Intersection Detection Validation - Seattle Region"],"duration":1,"failureDetails":[{"code":"SQLITE_CANTOPEN"}],"failureMessages":["SqliteError: unable to open database file\n    at new Database (/Users/shaydu/dev/carthorse/node_modules/better-sqlite3/lib/database.js:69:26)\n    at Object.<anonymous> (/Users/shaydu/dev/carthorse/src/__tests__/spatial/intersection-detection-simple.test.ts:350:20)\n    at Promise.then.completed (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/shaydu/dev/carthorse/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/shaydu/dev/carthorse/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Simple Intersection Detection Validation - Seattle Region validates intersection detection edge cases","invocations":1,"location":{"column":3,"line":370},"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"validates intersection detection edge cases"},{"ancestorTitles":["Simple Intersection Detection Validation - Seattle Region"],"duration":0,"failureDetails":[{"code":"SQLITE_CANTOPEN"}],"failureMessages":["SqliteError: unable to open database file\n    at new Database (/Users/shaydu/dev/carthorse/node_modules/better-sqlite3/lib/database.js:69:26)\n    at Object.<anonymous> (/Users/shaydu/dev/carthorse/src/__tests__/spatial/intersection-detection-simple.test.ts:391:20)\n    at Promise.then.completed (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/shaydu/dev/carthorse/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/shaydu/dev/carthorse/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Simple Intersection Detection Validation - Seattle Region should populate geometry column for all trails in SpatiaLite export","invocations":1,"location":{"column":3,"line":421},"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should populate geometry column for all trails in SpatiaLite export"}],"endTime":1753291598739,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mSimple Intersection Detection Validation - Seattle Region › validates intersection detection algorithm with Seattle dataset\u001b[39m\u001b[22m\n\n    error: too few arguments for format()\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 24 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 25 |\u001b[39m   \u001b[90m// Create routing nodes using PostGIS function\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 26 |\u001b[39m   \u001b[36mconst\u001b[39m nodeCountRes \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m pgClient\u001b[33m.\u001b[39mquery(\u001b[32m`\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 27 |\u001b[39m \u001b[32m    SELECT ${stagingSchema}.build_routing_nodes('${stagingSchema}', '${trailsTable}', ${intersectionTolerance})\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 28 |\u001b[39m \u001b[32m  `\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 29 |\u001b[39m   \u001b[36mconst\u001b[39m nodeCount \u001b[33m=\u001b[39m nodeCountRes\u001b[33m.\u001b[39mrows[\u001b[35m0\u001b[39m]\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mbuild_routing_nodes \u001b[33m?\u001b[39m\u001b[33m?\u001b[39m \u001b[35m0\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/pg/lib/client.js\u001b[2m:545:17\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat buildRoutingGraphHelper (\u001b[22m\u001b[2msrc/utils/sql/routing.ts\u001b[2m:26:24)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat EnhancedPostgresOrchestrator.buildRoutingGraph (\u001b[22m\u001b[2msrc/orchestrator/EnhancedPostgresOrchestrator.ts\u001b[2m:615:57)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat EnhancedPostgresOrchestrator.run (\u001b[22m\u001b[2msrc/orchestrator/EnhancedPostgresOrchestrator.ts\u001b[2m:241:7)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/spatial/intersection-detection-simple.test.ts\u001b[39m\u001b[0m\u001b[2m:134:5)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mSimple Intersection Detection Validation - Seattle Region › validates intersection detection edge cases\u001b[39m\u001b[22m\n\n    SqliteError: unable to open database file\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 348 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m`✅ All connected trails counts valid`\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 349 |\u001b[39m     \u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 350 |\u001b[39m     \u001b[90m// Key success indicators\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 351 |\u001b[39m     \u001b[36mif\u001b[39m (nodeToTrailRatio \u001b[33m<\u001b[39m \u001b[35m0.25\u001b[39m) {\u001b[22m\n\u001b[2m     \u001b[90m 352 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'🎯 EXCELLENT: Very efficient intersection detection (< 25% node ratio)'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 353 |\u001b[39m     } \u001b[36melse\u001b[39m \u001b[36mif\u001b[39m (nodeToTrailRatio \u001b[33m<\u001b[39m \u001b[35m0.4\u001b[39m) {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat new Database (\u001b[22m\u001b[2mnode_modules/better-sqlite3/lib/database.js\u001b[2m:69:26)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/spatial/intersection-detection-simple.test.ts\u001b[39m\u001b[0m\u001b[2m:350:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mSimple Intersection Detection Validation - Seattle Region › should populate geometry column for all trails in SpatiaLite export\u001b[39m\u001b[22m\n\n    SqliteError: unable to open database file\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 389 |\u001b[39m     \u001b[22m\n\u001b[2m     \u001b[90m 390 |\u001b[39m     \u001b[90m// Test 3: All nodes should have connected trails data\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 391 |\u001b[39m     \u001b[36mconst\u001b[39m nodesWithoutTrails \u001b[33m=\u001b[39m db\u001b[33m.\u001b[39mprepare(\u001b[32m'SELECT COUNT(*) as n FROM routing_nodes WHERE connected_trails IS NULL'\u001b[39m)\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m() \u001b[36mas\u001b[39m { n\u001b[33m:\u001b[39m number }\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 392 |\u001b[39m     expect(nodesWithoutTrails\u001b[33m.\u001b[39mn)\u001b[33m.\u001b[39mtoBe(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 393 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'✅ All nodes have connected trails data'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 394 |\u001b[39m     \u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat new Database (\u001b[22m\u001b[2mnode_modules/better-sqlite3/lib/database.js\u001b[2m:69:26)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/spatial/intersection-detection-simple.test.ts\u001b[39m\u001b[0m\u001b[2m:391:20)\u001b[22m\u001b[2m\u001b[22m\n","name":"/Users/shaydu/dev/carthorse/src/__tests__/spatial/intersection-detection-simple.test.ts","startTime":1753291598584,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Intersection Detection Accuracy Tests"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Intersection Detection Accuracy Tests should only create nodes at actual trail intersections and endpoints","invocations":1,"location":{"column":8,"line":26},"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should only create nodes at actual trail intersections and endpoints"},{"ancestorTitles":["Intersection Detection Accuracy Tests"],"duration":122,"failureDetails":[{"length":207,"name":"error","severity":"ERROR","code":"22023","where":"PL/pgSQL function staging_boulder_1753291598779.build_routing_nodes(text,text,double precision) line 10 at assignment","file":"varlena.c","line":"5889","routine":"text_format"}],"failureMessages":["error: too few arguments for format()\n    at /Users/shaydu/dev/carthorse/node_modules/pg/lib/client.js:545:17\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at buildRoutingGraphHelper (/Users/shaydu/dev/carthorse/src/utils/sql/routing.ts:26:24)\n    at EnhancedPostgresOrchestrator.buildRoutingGraph (/Users/shaydu/dev/carthorse/src/orchestrator/EnhancedPostgresOrchestrator.ts:615:57)\n    at EnhancedPostgresOrchestrator.run (/Users/shaydu/dev/carthorse/src/orchestrator/EnhancedPostgresOrchestrator.ts:241:7)\n    at Object.<anonymous> (/Users/shaydu/dev/carthorse/src/__tests__/spatial/intersection-accuracy.test.ts:221:9)"],"fullName":"Intersection Detection Accuracy Tests should handle different intersection tolerances correctly","invocations":1,"location":{"column":3,"line":192},"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle different intersection tolerances correctly"}],"endTime":1753291598903,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mIntersection Detection Accuracy Tests › should handle different intersection tolerances correctly\u001b[39m\u001b[22m\n\n    error: too few arguments for format()\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 24 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 25 |\u001b[39m   \u001b[90m// Create routing nodes using PostGIS function\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 26 |\u001b[39m   \u001b[36mconst\u001b[39m nodeCountRes \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m pgClient\u001b[33m.\u001b[39mquery(\u001b[32m`\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 27 |\u001b[39m \u001b[32m    SELECT ${stagingSchema}.build_routing_nodes('${stagingSchema}', '${trailsTable}', ${intersectionTolerance})\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 28 |\u001b[39m \u001b[32m  `\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 29 |\u001b[39m   \u001b[36mconst\u001b[39m nodeCount \u001b[33m=\u001b[39m nodeCountRes\u001b[33m.\u001b[39mrows[\u001b[35m0\u001b[39m]\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mbuild_routing_nodes \u001b[33m?\u001b[39m\u001b[33m?\u001b[39m \u001b[35m0\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/pg/lib/client.js\u001b[2m:545:17\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat buildRoutingGraphHelper (\u001b[22m\u001b[2msrc/utils/sql/routing.ts\u001b[2m:26:24)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat EnhancedPostgresOrchestrator.buildRoutingGraph (\u001b[22m\u001b[2msrc/orchestrator/EnhancedPostgresOrchestrator.ts\u001b[2m:615:57)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat EnhancedPostgresOrchestrator.run (\u001b[22m\u001b[2msrc/orchestrator/EnhancedPostgresOrchestrator.ts\u001b[2m:241:7)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/spatial/intersection-accuracy.test.ts\u001b[39m\u001b[0m\u001b[2m:221:9)\u001b[22m\u001b[2m\u001b[22m\n","name":"/Users/shaydu/dev/carthorse/src/__tests__/spatial/intersection-accuracy.test.ts","startTime":1753291598755,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["buildRoutingGraphHelper"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"buildRoutingGraphHelper should return node/edge counts and validation (smoke test)","invocations":1,"location":{"column":3,"line":8},"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should return node/edge counts and validation (smoke test)"},{"ancestorTitles":["buildRoutingGraphHelper"],"duration":9,"failureDetails":[{"length":269,"name":"error","severity":"ERROR","code":"42883","hint":"No function matches the given name and argument types. You might need to add explicit type casts.","position":"13","file":"parse_func.c","line":"636","routine":"ParseFuncOrColumn"}],"failureMessages":["error: function staging_boulder_1752133482310.build_routing_nodes(unknown, unknown, numeric) does not exist\n    at /Users/shaydu/dev/carthorse/node_modules/pg/lib/client.js:545:17\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at buildRoutingGraphHelper (/Users/shaydu/dev/carthorse/src/utils/sql/routing.ts:26:24)\n    at Object.<anonymous> (/Users/shaydu/dev/carthorse/src/utils/sql/__tests__/routing.test.ts:44:20)"],"fullName":"buildRoutingGraphHelper should build routing graph in a real test DB (integration)","invocations":1,"location":{"column":3,"line":29},"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should build routing graph in a real test DB (integration)"},{"ancestorTitles":["Minimal edge detection (in-memory mock)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Minimal edge detection (in-memory mock) should detect at least one edge for two intersecting trails","invocations":1,"location":{"column":3,"line":55},"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should detect at least one edge for two intersecting trails"},{"ancestorTitles":["Mock edge detection"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Mock edge detection should detect edges in minimal mock data","invocations":1,"location":{"column":3,"line":81},"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should detect edges in minimal mock data"},{"ancestorTitles":["Mock edge detection"],"duration":2,"failureDetails":[{}],"failureMessages":["TypeError: Cannot read properties of undefined (reading 'filter')\n    at Object.<anonymous> (/Users/shaydu/dev/carthorse/src/utils/sql/__tests__/routing.test.ts:109:37)\n    at Promise.then.completed (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/shaydu/dev/carthorse/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/shaydu/dev/carthorse/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Mock edge detection should load and parse real trails.geojson","invocations":1,"location":{"column":3,"line":100},"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should load and parse real trails.geojson"},{"ancestorTitles":["Node/Edge detection with real Boulder OSMP GeoJSON"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: Cannot read properties of undefined (reading 'filter')\n    at Object.<anonymous> (/Users/shaydu/dev/carthorse/src/utils/sql/__tests__/routing.test.ts:123:37)\n    at Promise.then.completed (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/shaydu/dev/carthorse/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/shaydu/dev/carthorse/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Node/Edge detection with real Boulder OSMP GeoJSON should detect nodes and edges from real trail data","invocations":1,"location":{"column":3,"line":116},"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should detect nodes and edges from real trail data"}],"endTime":1753291598958,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mbuildRoutingGraphHelper › should build routing graph in a real test DB (integration)\u001b[39m\u001b[22m\n\n    error: function staging_boulder_1752133482310.build_routing_nodes(unknown, unknown, numeric) does not exist\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 24 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 25 |\u001b[39m   \u001b[90m// Create routing nodes using PostGIS function\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 26 |\u001b[39m   \u001b[36mconst\u001b[39m nodeCountRes \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m pgClient\u001b[33m.\u001b[39mquery(\u001b[32m`\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 27 |\u001b[39m \u001b[32m    SELECT ${stagingSchema}.build_routing_nodes('${stagingSchema}', '${trailsTable}', ${intersectionTolerance})\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 28 |\u001b[39m \u001b[32m  `\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 29 |\u001b[39m   \u001b[36mconst\u001b[39m nodeCount \u001b[33m=\u001b[39m nodeCountRes\u001b[33m.\u001b[39mrows[\u001b[35m0\u001b[39m]\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mbuild_routing_nodes \u001b[33m?\u001b[39m\u001b[33m?\u001b[39m \u001b[35m0\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/pg/lib/client.js\u001b[2m:545:17\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat buildRoutingGraphHelper (\u001b[22m\u001b[2msrc/utils/sql/routing.ts\u001b[2m:26:24)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/utils/sql/__tests__/routing.test.ts\u001b[39m\u001b[0m\u001b[2m:44:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mMock edge detection › should load and parse real trails.geojson\u001b[39m\u001b[22m\n\n    TypeError: Cannot read properties of undefined (reading 'filter')\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 107 |\u001b[39m     }\u001b[22m\n\u001b[2m     \u001b[90m 108 |\u001b[39m     \u001b[36mconst\u001b[39m geojson \u001b[33m=\u001b[39m \u001b[33mJSON\u001b[39m\u001b[33m.\u001b[39mparse(fs\u001b[33m.\u001b[39mreadFileSync(geojsonPath\u001b[33m,\u001b[39m \u001b[32m'utf8'\u001b[39m))\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 109 |\u001b[39m     \u001b[36mconst\u001b[39m trails \u001b[33m=\u001b[39m geojson\u001b[33m.\u001b[39mfeatures\u001b[33m.\u001b[39mfilter((f\u001b[33m:\u001b[39m any) \u001b[33m=>\u001b[39m f\u001b[33m.\u001b[39mgeometry \u001b[33m&&\u001b[39m f\u001b[33m.\u001b[39mgeometry\u001b[33m.\u001b[39mtype \u001b[33m===\u001b[39m \u001b[32m'LineString'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 110 |\u001b[39m     expect(trails\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 111 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 112 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/utils/sql/__tests__/routing.test.ts\u001b[39m\u001b[0m\u001b[2m:109:37)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mNode/Edge detection with real Boulder OSMP GeoJSON › should detect nodes and edges from real trail data\u001b[39m\u001b[22m\n\n    TypeError: Cannot read properties of undefined (reading 'filter')\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 121 |\u001b[39m     }\u001b[22m\n\u001b[2m     \u001b[90m 122 |\u001b[39m     \u001b[36mconst\u001b[39m geojson \u001b[33m=\u001b[39m \u001b[33mJSON\u001b[39m\u001b[33m.\u001b[39mparse(fs\u001b[33m.\u001b[39mreadFileSync(geojsonPath\u001b[33m,\u001b[39m \u001b[32m'utf8'\u001b[39m))\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 123 |\u001b[39m     \u001b[36mconst\u001b[39m trails \u001b[33m=\u001b[39m geojson\u001b[33m.\u001b[39mfeatures\u001b[33m.\u001b[39mfilter((f\u001b[33m:\u001b[39m any) \u001b[33m=>\u001b[39m f\u001b[33m.\u001b[39mgeometry \u001b[33m&&\u001b[39m f\u001b[33m.\u001b[39mgeometry\u001b[33m.\u001b[39mtype \u001b[33m===\u001b[39m \u001b[32m'LineString'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 124 |\u001b[39m     \u001b[90m// Simulate orchestrator pipeline: detect intersections, then build routing graph\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 125 |\u001b[39m     \u001b[90m// (You may need to adapt this to your actual helper signatures)\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 126 |\u001b[39m     \u001b[36mconst\u001b[39m mockPgClient \u001b[33m=\u001b[39m {\u001b[90m/* mock or in-memory client if needed */\u001b[39m}\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/utils/sql/__tests__/routing.test.ts\u001b[39m\u001b[0m\u001b[2m:123:37)\u001b[22m\u001b[2m\u001b[22m\n","name":"/Users/shaydu/dev/carthorse/src/utils/sql/__tests__/routing.test.ts","startTime":1753291598917,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["PostGIS Intersection Functions","detect_trail_intersections()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PostGIS Intersection Functions detect_trail_intersections() should detect intersections between crossing trails","invocations":1,"location":{"column":5,"line":130},"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should detect intersections between crossing trails"},{"ancestorTitles":["PostGIS Intersection Functions","detect_trail_intersections()"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PostGIS Intersection Functions detect_trail_intersections() should handle different tolerance values","invocations":1,"location":{"column":5,"line":156},"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should handle different tolerance values"},{"ancestorTitles":["PostGIS Intersection Functions","build_routing_nodes()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PostGIS Intersection Functions build_routing_nodes() should create routing nodes from intersection detection","invocations":1,"location":{"column":5,"line":182},"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should create routing nodes from intersection detection"},{"ancestorTitles":["PostGIS Intersection Functions","build_routing_nodes()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PostGIS Intersection Functions build_routing_nodes() should achieve reasonable node-to-trail ratio","invocations":1,"location":{"column":5,"line":215},"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should achieve reasonable node-to-trail ratio"},{"ancestorTitles":["PostGIS Intersection Functions","build_routing_edges()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PostGIS Intersection Functions build_routing_edges() should create routing edges between nodes","invocations":1,"location":{"column":5,"line":234},"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should create routing edges between nodes"},{"ancestorTitles":["PostGIS Intersection Functions","get_intersection_stats()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PostGIS Intersection Functions get_intersection_stats() should provide accurate intersection statistics","invocations":1,"location":{"column":5,"line":267},"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should provide accurate intersection statistics"},{"ancestorTitles":["PostGIS Intersection Functions","validate_intersection_detection()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PostGIS Intersection Functions validate_intersection_detection() should pass all validation checks","invocations":1,"location":{"column":5,"line":298},"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should pass all validation checks"},{"ancestorTitles":["PostGIS Intersection Functions","split_trails_at_intersections() 3D geometry preservation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PostGIS Intersection Functions split_trails_at_intersections() 3D geometry preservation should produce only LINESTRINGZ segments with 3D coordinates","invocations":1,"location":{"column":5,"line":328},"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should produce only LINESTRINGZ segments with 3D coordinates"},{"ancestorTitles":["PostGIS Intersection Functions","Integration Test: Full Pipeline"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PostGIS Intersection Functions Integration Test: Full Pipeline should complete full intersection detection pipeline","invocations":1,"location":{"column":5,"line":345},"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should complete full intersection detection pipeline"},{"ancestorTitles":["SpatiaLite Export Geometry Column"],"duration":2,"failureDetails":[{"code":"SQLITE_CANTOPEN"}],"failureMessages":["SqliteError: unable to open database file\n    at new Database (/Users/shaydu/dev/carthorse/node_modules/better-sqlite3/lib/database.js:69:26)\n    at Object.<anonymous> (/Users/shaydu/dev/carthorse/src/__tests__/spatial/postgis-functions.test.ts:367:20)\n    at Promise.then.completed (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/shaydu/dev/carthorse/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/shaydu/dev/carthorse/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"SpatiaLite Export Geometry Column should populate geometry column for all trails with coordinates","invocations":1,"location":{"column":3,"line":395},"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should populate geometry column for all trails with coordinates"}],"endTime":1753291598993,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mSpatiaLite Export Geometry Column › should populate geometry column for all trails with coordinates\u001b[39m\u001b[22m\n\n    SqliteError: unable to open database file\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 365 |\u001b[39m \u001b[32m      `\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 366 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m`✅ Step 3: Created ${edgeCount.rows[0].build_routing_edges} routing edges`\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 367 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 368 |\u001b[39m       \u001b[90m// Step 4: Get statistics\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 369 |\u001b[39m       \u001b[36mconst\u001b[39m stats \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m client\u001b[33m.\u001b[39mquery(\u001b[32m`\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 370 |\u001b[39m \u001b[32m        SELECT * FROM get_intersection_stats('${testSchema}')\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat new Database (\u001b[22m\u001b[2mnode_modules/better-sqlite3/lib/database.js\u001b[2m:69:26)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/spatial/postgis-functions.test.ts\u001b[39m\u001b[0m\u001b[2m:367:20)\u001b[22m\u001b[2m\u001b[22m\n","name":"/Users/shaydu/dev/carthorse/src/__tests__/spatial/postgis-functions.test.ts","startTime":1753291598961,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["detectIntersectionsHelper"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"detectIntersectionsHelper should return a Map (smoke test)","invocations":1,"location":{"column":3,"line":5},"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return a Map (smoke test)"},{"ancestorTitles":["detectIntersectionsHelper"],"duration":13,"failureDetails":[{"length":140,"name":"error","severity":"ERROR","code":"42703","position":"76","file":"parse_target.c","line":"1080","routine":"checkInsertTargets"}],"failureMessages":["error: column \"point_3d\" of relation \"intersection_points\" does not exist\n    at /Users/shaydu/dev/carthorse/node_modules/pg/lib/client.js:545:17\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at detectIntersectionsHelper (/Users/shaydu/dev/carthorse/src/utils/sql/intersection.ts:35:3)\n    at Object.<anonymous> (/Users/shaydu/dev/carthorse/src/utils/sql/__tests__/intersection.test.ts:26:20)"],"fullName":"detectIntersectionsHelper should detect intersections in a real test DB (integration)","invocations":1,"location":{"column":3,"line":13},"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should detect intersections in a real test DB (integration)"}],"endTime":1753291599029,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mdetectIntersectionsHelper › should detect intersections in a real test DB (integration)\u001b[39m\u001b[22m\n\n    error: column \"point_3d\" of relation \"intersection_points\" does not exist\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 33 |\u001b[39m \u001b[32m    WHERE array_length(connected_trail_ids, 1) >= 2\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 34 |\u001b[39m \u001b[32m  `\u001b[39m\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 35 |\u001b[39m   \u001b[36mawait\u001b[39m pgClient\u001b[33m.\u001b[39mquery(sql\u001b[33m,\u001b[39m [tolerance])\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 36 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 37 |\u001b[39m   \u001b[90m// Load intersection data\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 38 |\u001b[39m   \u001b[36mconst\u001b[39m intersections \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m pgClient\u001b[33m.\u001b[39mquery(\u001b[32m`\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/pg/lib/client.js\u001b[2m:545:17\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat detectIntersectionsHelper (\u001b[22m\u001b[2msrc/utils/sql/intersection.ts\u001b[2m:35:3)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/utils/sql/__tests__/intersection.test.ts\u001b[39m\u001b[0m\u001b[2m:26:20)\u001b[22m\u001b[2m\u001b[22m\n","name":"/Users/shaydu/dev/carthorse/src/utils/sql/__tests__/intersection.test.ts","startTime":1753291598995,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["CARTHORSE Basic Tests"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"CARTHORSE Basic Tests DataIntegrityValidator can be instantiated","invocations":1,"location":{"column":3,"line":4},"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"DataIntegrityValidator can be instantiated"}],"coverage":{},"endTime":1753291602441,"message":"","name":"/Users/shaydu/dev/carthorse/src/__tests__/basic.test.ts","startTime":1753291602441,"status":"skipped","summary":""},{"assertionResults":[{"ancestorTitles":["CLI Integration Tests"],"duration":68,"failureDetails":[],"failureMessages":[],"fullName":"CLI Integration Tests CLI --help shows usage information","invocations":1,"location":{"column":3,"line":66},"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"CLI --help shows usage information"},{"ancestorTitles":["CLI Integration Tests"],"duration":59,"failureDetails":[],"failureMessages":[],"fullName":"CLI Integration Tests CLI --version shows version information","invocations":1,"location":{"column":3,"line":75},"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"CLI --version shows version information"},{"ancestorTitles":["CLI Integration Tests"],"duration":67,"failureDetails":[],"failureMessages":[],"fullName":"CLI Integration Tests CLI validates required --region parameter","invocations":1,"location":{"column":3,"line":83},"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"CLI validates required --region parameter"},{"ancestorTitles":["CLI Integration Tests"],"duration":60,"failureDetails":[],"failureMessages":[],"fullName":"CLI Integration Tests CLI validates required --out parameter","invocations":1,"location":{"column":3,"line":91},"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"CLI validates required --out parameter"},{"ancestorTitles":["CLI Integration Tests"],"duration":128,"failureDetails":[],"failureMessages":[],"fullName":"CLI Integration Tests CLI accepts valid parameters without errors","invocations":1,"location":{"column":3,"line":99},"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"CLI accepts valid parameters without errors"},{"ancestorTitles":["CLI Integration Tests"],"duration":135,"failureDetails":[],"failureMessages":[],"fullName":"CLI Integration Tests CLI --validate flag is recognized","invocations":1,"location":{"column":3,"line":112},"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"CLI --validate flag is recognized"},{"ancestorTitles":["CLI Integration Tests"],"duration":80,"failureDetails":[],"failureMessages":[],"fullName":"CLI Integration Tests CLI --build-master flag is recognized","invocations":1,"location":{"column":3,"line":123},"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"CLI --build-master flag is recognized"},{"ancestorTitles":["CLI Integration Tests"],"duration":131,"failureDetails":[],"failureMessages":[],"fullName":"CLI Integration Tests CLI --simplify-tolerance accepts numeric values","invocations":1,"location":{"column":3,"line":134},"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"CLI --simplify-tolerance accepts numeric values"},{"ancestorTitles":["CLI Integration Tests"],"duration":136,"failureDetails":[],"failureMessages":[],"fullName":"CLI Integration Tests CLI --target-size accepts numeric values","invocations":1,"location":{"column":3,"line":145},"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"CLI --target-size accepts numeric values"},{"ancestorTitles":["CLI Integration Tests"],"duration":131,"failureDetails":[],"failureMessages":[],"fullName":"CLI Integration Tests CLI rejects invalid numeric values","invocations":1,"location":{"column":3,"line":156},"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"CLI rejects invalid numeric values"},{"ancestorTitles":["CLI Integration Tests"],"duration":93,"failureDetails":[],"failureMessages":[],"fullName":"CLI Integration Tests CLI shows meaningful error for invalid region","invocations":1,"location":{"column":3,"line":167},"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"CLI shows meaningful error for invalid region"},{"ancestorTitles":["CLI End-to-End Tests (requires test database)"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"CLI End-to-End Tests (requires test database) CLI can export a region successfully","invocations":1,"location":{"column":3,"line":183},"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"CLI can export a region successfully"},{"ancestorTitles":["CLI End-to-End Tests (requires test database)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"CLI End-to-End Tests (requires test database) CLI can build master database and export","invocations":1,"location":{"column":3,"line":227},"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"CLI can build master database and export"},{"ancestorTitles":["End-to-end bbox export integration"],"duration":1092,"failureDetails":[],"failureMessages":[],"fullName":"End-to-end bbox export integration exports the custom initial_view_bbox for boulder","invocations":1,"location":{"column":3,"line":288},"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"exports the custom initial_view_bbox for boulder"},{"ancestorTitles":["End-to-end bbox export integration"],"duration":978,"failureDetails":[],"failureMessages":[],"fullName":"End-to-end bbox export integration calculates and exports the fallback initial_view_bbox for seattle","invocations":1,"location":{"column":3,"line":326},"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"calculates and exports the fallback initial_view_bbox for seattle"}],"endTime":1753291602238,"message":"","name":"/Users/shaydu/dev/carthorse/src/__tests__/cli-integration.test.ts","startTime":1753291599049,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Intersection Detection - Unit Tests","Algorithm Analysis"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"Intersection Detection - Unit Tests Algorithm Analysis should identify the core intersection detection problems","invocations":1,"location":{"column":5,"line":194},"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should identify the core intersection detection problems"},{"ancestorTitles":["Intersection Detection - Unit Tests","Algorithm Analysis"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Intersection Detection - Unit Tests Algorithm Analysis should test intersection tolerance sensitivity with mock data","invocations":1,"location":{"column":5,"line":264},"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should test intersection tolerance sensitivity with mock data"},{"ancestorTitles":["Intersection Detection - Unit Tests","Algorithm Validation"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"Intersection Detection - Unit Tests Algorithm Validation should validate that intersection detection is working correctly","invocations":1,"location":{"column":5,"line":303},"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should validate that intersection detection is working correctly"}],"endTime":1753291602287,"message":"","name":"/Users/shaydu/dev/carthorse/src/__tests__/spatial/intersection-detection-unit.test.ts","startTime":1753291602241,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Test Database Setup"],"duration":28,"failureDetails":[],"failureMessages":[],"fullName":"Test Database Setup should ensure the test database exists and is seeded","invocations":1,"location":{"column":3,"line":5},"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should ensure the test database exists and is seeded"}],"endTime":1753291602339,"message":"","name":"/Users/shaydu/dev/carthorse/src/__tests__/test-db-setup.test.ts","startTime":1753291602295,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["PostGIS Functions Syntax Validation"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"PostGIS Functions Syntax Validation should have valid SQL syntax in PostGIS functions file","invocations":1,"location":{"column":3,"line":5},"numPassingAsserts":19,"retryReasons":[],"status":"passed","title":"should have valid SQL syntax in PostGIS functions file"},{"ancestorTitles":["PostGIS Functions Syntax Validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PostGIS Functions Syntax Validation should have all required function signatures","invocations":1,"location":{"column":3,"line":39},"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should have all required function signatures"},{"ancestorTitles":["PostGIS Functions Syntax Validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PostGIS Functions Syntax Validation should have proper error handling and validation","invocations":1,"location":{"column":3,"line":59},"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should have proper error handling and validation"},{"ancestorTitles":["PostGIS Functions Syntax Validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PostGIS Functions Syntax Validation should have comprehensive documentation and examples","invocations":1,"location":{"column":3,"line":72},"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should have comprehensive documentation and examples"},{"ancestorTitles":["PostGIS Functions Syntax Validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PostGIS Functions Syntax Validation should use advanced PostGIS functions for optimization (warn only)","invocations":1,"location":{"column":3,"line":84},"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should use advanced PostGIS functions for optimization (warn only)"},{"ancestorTitles":["PostGIS Functions Syntax Validation"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"PostGIS Functions Syntax Validation should have proper return types and data structures","invocations":1,"location":{"column":3,"line":105},"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"should have proper return types and data structures"},{"ancestorTitles":["PostGIS Functions Syntax Validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PostGIS Functions Syntax Validation should include performance optimization features","invocations":1,"location":{"column":3,"line":120},"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should include performance optimization features"}],"endTime":1753291602367,"message":"","name":"/Users/shaydu/dev/carthorse/src/__tests__/postgis-functions-syntax.test.ts","startTime":1753291602342,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Schema Version Validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Schema Version Validation should have expected schema version","invocations":1,"location":{"column":3,"line":7},"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should have expected schema version"},{"ancestorTitles":["Schema Version Validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Schema Version Validation should validate PostgreSQL schema if environment is configured","invocations":1,"location":{"column":3,"line":13},"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should validate PostgreSQL schema if environment is configured"},{"ancestorTitles":["Schema Version Validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Schema Version Validation should validate test database schema if it exists","invocations":1,"location":{"column":3,"line":40},"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should validate test database schema if it exists"},{"ancestorTitles":["Schema Version Validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Schema Version Validation should validate production database schema if it exists","invocations":1,"location":{"column":3,"line":64},"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should validate production database schema if it exists"}],"endTime":1753291602390,"message":"","name":"/Users/shaydu/dev/carthorse/src/__tests__/schema-version.test.ts","startTime":1753291602370,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["initial_view_bbox logic"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"initial_view_bbox logic uses a valid object from DB as-is","invocations":1,"location":{"column":3,"line":7},"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"uses a valid object from DB as-is"},{"ancestorTitles":["initial_view_bbox logic"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"initial_view_bbox logic parses a valid stringified bbox from DB","invocations":1,"location":{"column":3,"line":12},"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"parses a valid stringified bbox from DB"},{"ancestorTitles":["initial_view_bbox logic"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"initial_view_bbox logic falls back to calculated bbox for null","invocations":1,"location":{"column":3,"line":17},"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"falls back to calculated bbox for null"},{"ancestorTitles":["initial_view_bbox logic"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"initial_view_bbox logic falls back to calculated bbox for string \"null\"","invocations":1,"location":{"column":3,"line":21},"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"falls back to calculated bbox for string \"null\""},{"ancestorTitles":["initial_view_bbox logic"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"initial_view_bbox logic falls back to calculated bbox for empty string","invocations":1,"location":{"column":3,"line":25},"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"falls back to calculated bbox for empty string"},{"ancestorTitles":["initial_view_bbox logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"initial_view_bbox logic falls back to calculated bbox for invalid object","invocations":1,"location":{"column":3,"line":29},"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"falls back to calculated bbox for invalid object"},{"ancestorTitles":["initial_view_bbox logic"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"initial_view_bbox logic calculates the fallback bbox accurately","invocations":1,"location":{"column":3,"line":34},"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"calculates the fallback bbox accurately"}],"endTime":1753291602413,"message":"","name":"/Users/shaydu/dev/carthorse/src/__tests__/bbox.test.ts","startTime":1753291602394,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Intersection Detection Algorithm - Real Data Analysis"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Intersection Detection Algorithm - Real Data Analysis should analyze current intersection detection behavior with real data","invocations":1,"location":{"column":8,"line":25},"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should analyze current intersection detection behavior with real data"},{"ancestorTitles":["Intersection Detection Algorithm - Real Data Analysis"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Intersection Detection Algorithm - Real Data Analysis should test different intersection tolerances","invocations":1,"location":{"column":8,"line":80},"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should test different intersection tolerances"}],"coverage":{},"endTime":1753291602441,"message":"","name":"/Users/shaydu/dev/carthorse/src/__tests__/intersection-detection.test.ts","startTime":1753291602441,"status":"skipped","summary":""}],"wasInterrupted":false}
