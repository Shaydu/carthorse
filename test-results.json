{"numFailedTestSuites":4,"numFailedTests":8,"numPassedTestSuites":6,"numPassedTests":59,"numPendingTestSuites":3,"numPendingTests":5,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":13,"numTotalTests":72,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1753129618371,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["Intersection Detection Validation - Boulder Region"],"duration":130,"failureDetails":[{"length":144,"name":"error","severity":"ERROR","code":"25P02","file":"postgres.c","line":"1048","routine":"exec_simple_query"}],"failureMessages":["error: current transaction is aborted, commands ignored until end of transaction block\n    at /Users/shaydu/dev/carthorse/node_modules/pg/lib/client.js:545:17\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at EnhancedPostgresOrchestrator.validateStagingData (/Users/shaydu/dev/carthorse/src/orchestrator/EnhancedPostgresOrchestrator.ts:596:30)\n    at EnhancedPostgresOrchestrator.copyRegionDataToStaging (/Users/shaydu/dev/carthorse/src/orchestrator/EnhancedPostgresOrchestrator.ts:580:7)\n    at EnhancedPostgresOrchestrator.run (/Users/shaydu/dev/carthorse/src/orchestrator/EnhancedPostgresOrchestrator.ts:235:9)\n    at Object.<anonymous> (/Users/shaydu/dev/carthorse/src/__tests__/spatial/intersection-detection-validation.test.ts:123:5)"],"fullName":"Intersection Detection Validation - Boulder Region validates intersection detection algorithm with comprehensive reference values","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"validates intersection detection algorithm with comprehensive reference values"},{"ancestorTitles":["Intersection Detection Validation - Boulder Region"],"duration":8,"failureDetails":[{"code":"SQLITE_CANTOPEN"}],"failureMessages":["SqliteError: unable to open database file\n    at new Database (/Users/shaydu/dev/carthorse/node_modules/better-sqlite3/lib/database.js:69:26)\n    at Object.<anonymous> (/Users/shaydu/dev/carthorse/src/__tests__/spatial/intersection-detection-validation.test.ts:360:16)\n    at Promise.then.completed (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/shaydu/dev/carthorse/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/shaydu/dev/carthorse/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Intersection Detection Validation - Boulder Region validates intersection detection edge cases and error handling","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"validates intersection detection edge cases and error handling"},{"ancestorTitles":["Intersection Detection Validation - Boulder Region"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Intersection Detection Validation - Boulder Region provides detailed intersection detection reference documentation","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"provides detailed intersection detection reference documentation"}],"endTime":1753129619195,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mIntersection Detection Validation - Boulder Region › validates intersection detection algorithm with comprehensive reference values\u001b[39m\u001b[22m\n\n    error: current transaction is aborted, commands ignored until end of transaction block\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 594 |\u001b[39m     \u001b[22m\n\u001b[2m     \u001b[90m 595 |\u001b[39m     \u001b[90m// Essential validation checks\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 596 |\u001b[39m     \u001b[36mconst\u001b[39m missingElevation \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mpgClient\u001b[33m.\u001b[39mquery(\u001b[32m`\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 597 |\u001b[39m \u001b[32m      SELECT COUNT(*) as count FROM ${this.stagingSchema}.trails\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 598 |\u001b[39m \u001b[32m      WHERE elevation_gain IS NULL OR elevation_loss IS NULL \u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 599 |\u001b[39m \u001b[32m         OR max_elevation IS NULL OR min_elevation IS NULL OR avg_elevation IS NULL\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/pg/lib/client.js\u001b[2m:545:17\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat EnhancedPostgresOrchestrator.validateStagingData (\u001b[22m\u001b[2msrc/orchestrator/EnhancedPostgresOrchestrator.ts\u001b[2m:596:30)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat EnhancedPostgresOrchestrator.copyRegionDataToStaging (\u001b[22m\u001b[2msrc/orchestrator/EnhancedPostgresOrchestrator.ts\u001b[2m:580:7)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat EnhancedPostgresOrchestrator.run (\u001b[22m\u001b[2msrc/orchestrator/EnhancedPostgresOrchestrator.ts\u001b[2m:235:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/spatial/intersection-detection-validation.test.ts\u001b[39m\u001b[0m\u001b[2m:123:5)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mIntersection Detection Validation - Boulder Region › validates intersection detection edge cases and error handling\u001b[39m\u001b[22m\n\n    SqliteError: unable to open database file\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 358 |\u001b[39m     \u001b[22m\n\u001b[2m     \u001b[90m 359 |\u001b[39m     \u001b[90m// This test validates that the algorithm handles edge cases correctly\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 360 |\u001b[39m     \u001b[36mconst\u001b[39m db \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mDatabase\u001b[39m(\u001b[33mBOULDER_OUTPUT_PATH\u001b[39m\u001b[33m,\u001b[39m { readonly\u001b[33m:\u001b[39m \u001b[36mtrue\u001b[39m })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 361 |\u001b[39m     db\u001b[33m.\u001b[39mloadExtension(\u001b[32m'/opt/homebrew/lib/mod_spatialite.dylib'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 362 |\u001b[39m     \u001b[22m\n\u001b[2m     \u001b[90m 363 |\u001b[39m     \u001b[90m// Test 1: No nodes should have null coordinates\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat new Database (\u001b[22m\u001b[2mnode_modules/better-sqlite3/lib/database.js\u001b[2m:69:26)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/spatial/intersection-detection-validation.test.ts\u001b[39m\u001b[0m\u001b[2m:360:16)\u001b[22m\u001b[2m\u001b[22m\n","name":"/Users/shaydu/dev/carthorse/src/__tests__/spatial/intersection-detection-validation.test.ts","startTime":1753129618389,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Routing Graph Export Pipeline"],"duration":154,"failureDetails":[{"length":1078,"name":"error","severity":"ERROR","code":"42804","detail":"Returned type bigint does not match expected type integer in column 1.","where":"SQL statement \"\n        SELECT \n            (SELECT COUNT(*) FROM staging_boulder_1753129619270.routing_nodes) as total_nodes,\n            (SELECT COUNT(*) FROM staging_boulder_1753129619270.routing_nodes WHERE node_type = 'intersection') as intersection_nodes,\n            (SELECT COUNT(*) FROM staging_boulder_1753129619270.routing_nodes WHERE node_type = 'endpoint') as endpoint_nodes,\n            (SELECT COUNT(*) FROM staging_boulder_1753129619270.routing_edges) as total_edges,\n            CASE \n                WHEN $1 > 0 THEN (SELECT COUNT(*) FROM staging_boulder_1753129619270.routing_nodes)::float / $1\n                ELSE 0\n            END as node_to_trail_ratio,\n            EXTRACT(EPOCH FROM (clock_timestamp() - $2::timestamp)) * 1000 as processing_time_ms\n    \"\nPL/pgSQL function staging_boulder_1753129619270.get_intersection_stats(text) line 13 at RETURN QUERY","file":"attmap.c","line":"127","routine":"build_attrmap_by_position"}],"failureMessages":["error: structure of query does not match function result type\n    at /Users/shaydu/dev/carthorse/node_modules/pg/lib/client.js:545:17\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at EnhancedPostgresOrchestrator.buildRoutingGraph (/Users/shaydu/dev/carthorse/src/orchestrator/EnhancedPostgresOrchestrator.ts:1002:19)\n    at EnhancedPostgresOrchestrator.run (/Users/shaydu/dev/carthorse/src/orchestrator/EnhancedPostgresOrchestrator.ts:272:7)\n    at Object.<anonymous> (/Users/shaydu/dev/carthorse/src/__tests__/routing-graph-export.test.ts:61:5)"],"fullName":"Routing Graph Export Pipeline orchestrator exports routing_nodes and routing_edges with correct schema and data for boulder","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"orchestrator exports routing_nodes and routing_edges with correct schema and data for boulder"},{"ancestorTitles":["Routing Graph Export Pipeline"],"duration":79,"failureDetails":[{"length":1078,"name":"error","severity":"ERROR","code":"42804","detail":"Returned type bigint does not match expected type integer in column 1.","where":"SQL statement \"\n        SELECT \n            (SELECT COUNT(*) FROM staging_seattle_1753129619424.routing_nodes) as total_nodes,\n            (SELECT COUNT(*) FROM staging_seattle_1753129619424.routing_nodes WHERE node_type = 'intersection') as intersection_nodes,\n            (SELECT COUNT(*) FROM staging_seattle_1753129619424.routing_nodes WHERE node_type = 'endpoint') as endpoint_nodes,\n            (SELECT COUNT(*) FROM staging_seattle_1753129619424.routing_edges) as total_edges,\n            CASE \n                WHEN $1 > 0 THEN (SELECT COUNT(*) FROM staging_seattle_1753129619424.routing_nodes)::float / $1\n                ELSE 0\n            END as node_to_trail_ratio,\n            EXTRACT(EPOCH FROM (clock_timestamp() - $2::timestamp)) * 1000 as processing_time_ms\n    \"\nPL/pgSQL function staging_seattle_1753129619424.get_intersection_stats(text) line 13 at RETURN QUERY","file":"attmap.c","line":"127","routine":"build_attrmap_by_position"}],"failureMessages":["error: structure of query does not match function result type\n    at /Users/shaydu/dev/carthorse/node_modules/pg/lib/client.js:545:17\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at EnhancedPostgresOrchestrator.buildRoutingGraph (/Users/shaydu/dev/carthorse/src/orchestrator/EnhancedPostgresOrchestrator.ts:1002:19)\n    at EnhancedPostgresOrchestrator.run (/Users/shaydu/dev/carthorse/src/orchestrator/EnhancedPostgresOrchestrator.ts:272:7)\n    at Object.<anonymous> (/Users/shaydu/dev/carthorse/src/__tests__/routing-graph-export.test.ts:207:5)"],"fullName":"Routing Graph Export Pipeline orchestrator exports routing_nodes and routing_edges with correct schema and data for seattle","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"orchestrator exports routing_nodes and routing_edges with correct schema and data for seattle"}],"endTime":1753129619524,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mRouting Graph Export Pipeline › orchestrator exports routing_nodes and routing_edges with correct schema and data for boulder\u001b[39m\u001b[22m\n\n    error: structure of query does not match function result type\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 1000 |\u001b[39m     \u001b[22m\n\u001b[2m     \u001b[90m 1001 |\u001b[39m     \u001b[90m// Get intersection statistics\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 1002 |\u001b[39m     \u001b[36mconst\u001b[39m stats \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mpgClient\u001b[33m.\u001b[39mquery(\u001b[32m`\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m      |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 1003 |\u001b[39m \u001b[32m      SELECT * FROM ${this.stagingSchema}.get_intersection_stats('${this.stagingSchema}')\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 1004 |\u001b[39m \u001b[32m    `\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 1005 |\u001b[39m     \u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/pg/lib/client.js\u001b[2m:545:17\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat EnhancedPostgresOrchestrator.buildRoutingGraph (\u001b[22m\u001b[2msrc/orchestrator/EnhancedPostgresOrchestrator.ts\u001b[2m:1002:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat EnhancedPostgresOrchestrator.run (\u001b[22m\u001b[2msrc/orchestrator/EnhancedPostgresOrchestrator.ts\u001b[2m:272:7)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/routing-graph-export.test.ts\u001b[39m\u001b[0m\u001b[2m:61:5)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mRouting Graph Export Pipeline › orchestrator exports routing_nodes and routing_edges with correct schema and data for seattle\u001b[39m\u001b[22m\n\n    error: structure of query does not match function result type\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 1000 |\u001b[39m     \u001b[22m\n\u001b[2m     \u001b[90m 1001 |\u001b[39m     \u001b[90m// Get intersection statistics\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 1002 |\u001b[39m     \u001b[36mconst\u001b[39m stats \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mpgClient\u001b[33m.\u001b[39mquery(\u001b[32m`\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m      |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 1003 |\u001b[39m \u001b[32m      SELECT * FROM ${this.stagingSchema}.get_intersection_stats('${this.stagingSchema}')\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 1004 |\u001b[39m \u001b[32m    `\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 1005 |\u001b[39m     \u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/pg/lib/client.js\u001b[2m:545:17\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat EnhancedPostgresOrchestrator.buildRoutingGraph (\u001b[22m\u001b[2msrc/orchestrator/EnhancedPostgresOrchestrator.ts\u001b[2m:1002:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat EnhancedPostgresOrchestrator.run (\u001b[22m\u001b[2msrc/orchestrator/EnhancedPostgresOrchestrator.ts\u001b[2m:272:7)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/routing-graph-export.test.ts\u001b[39m\u001b[0m\u001b[2m:207:5)\u001b[22m\u001b[2m\u001b[22m\n","name":"/Users/shaydu/dev/carthorse/src/__tests__/routing-graph-export.test.ts","startTime":1753129619245,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Simple Intersection Detection Validation - Seattle Region"],"duration":104,"failureDetails":[{"length":1078,"name":"error","severity":"ERROR","code":"42804","detail":"Returned type bigint does not match expected type integer in column 1.","where":"SQL statement \"\n        SELECT \n            (SELECT COUNT(*) FROM staging_seattle_1753129619595.routing_nodes) as total_nodes,\n            (SELECT COUNT(*) FROM staging_seattle_1753129619595.routing_nodes WHERE node_type = 'intersection') as intersection_nodes,\n            (SELECT COUNT(*) FROM staging_seattle_1753129619595.routing_nodes WHERE node_type = 'endpoint') as endpoint_nodes,\n            (SELECT COUNT(*) FROM staging_seattle_1753129619595.routing_edges) as total_edges,\n            CASE \n                WHEN $1 > 0 THEN (SELECT COUNT(*) FROM staging_seattle_1753129619595.routing_nodes)::float / $1\n                ELSE 0\n            END as node_to_trail_ratio,\n            EXTRACT(EPOCH FROM (clock_timestamp() - $2::timestamp)) * 1000 as processing_time_ms\n    \"\nPL/pgSQL function staging_seattle_1753129619595.get_intersection_stats(text) line 13 at RETURN QUERY","file":"attmap.c","line":"127","routine":"build_attrmap_by_position"}],"failureMessages":["error: structure of query does not match function result type\n    at /Users/shaydu/dev/carthorse/node_modules/pg/lib/client.js:545:17\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at EnhancedPostgresOrchestrator.buildRoutingGraph (/Users/shaydu/dev/carthorse/src/orchestrator/EnhancedPostgresOrchestrator.ts:1002:19)\n    at EnhancedPostgresOrchestrator.run (/Users/shaydu/dev/carthorse/src/orchestrator/EnhancedPostgresOrchestrator.ts:272:7)\n    at Object.<anonymous> (/Users/shaydu/dev/carthorse/src/__tests__/spatial/intersection-detection-simple.test.ts:113:5)"],"fullName":"Simple Intersection Detection Validation - Seattle Region validates intersection detection algorithm with Seattle dataset","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"validates intersection detection algorithm with Seattle dataset"},{"ancestorTitles":["Simple Intersection Detection Validation - Seattle Region"],"duration":1,"failureDetails":[{"code":"SQLITE_CANTOPEN"}],"failureMessages":["SqliteError: unable to open database file\n    at new Database (/Users/shaydu/dev/carthorse/node_modules/better-sqlite3/lib/database.js:69:26)\n    at Object.<anonymous> (/Users/shaydu/dev/carthorse/src/__tests__/spatial/intersection-detection-simple.test.ts:334:20)\n    at Promise.then.completed (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/shaydu/dev/carthorse/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/shaydu/dev/carthorse/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/shaydu/dev/carthorse/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Simple Intersection Detection Validation - Seattle Region validates intersection detection edge cases","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"validates intersection detection edge cases"}],"endTime":1753129619710,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mSimple Intersection Detection Validation - Seattle Region › validates intersection detection algorithm with Seattle dataset\u001b[39m\u001b[22m\n\n    error: structure of query does not match function result type\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 1000 |\u001b[39m     \u001b[22m\n\u001b[2m     \u001b[90m 1001 |\u001b[39m     \u001b[90m// Get intersection statistics\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 1002 |\u001b[39m     \u001b[36mconst\u001b[39m stats \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mpgClient\u001b[33m.\u001b[39mquery(\u001b[32m`\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m      |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 1003 |\u001b[39m \u001b[32m      SELECT * FROM ${this.stagingSchema}.get_intersection_stats('${this.stagingSchema}')\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 1004 |\u001b[39m \u001b[32m    `\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 1005 |\u001b[39m     \u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/pg/lib/client.js\u001b[2m:545:17\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat EnhancedPostgresOrchestrator.buildRoutingGraph (\u001b[22m\u001b[2msrc/orchestrator/EnhancedPostgresOrchestrator.ts\u001b[2m:1002:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat EnhancedPostgresOrchestrator.run (\u001b[22m\u001b[2msrc/orchestrator/EnhancedPostgresOrchestrator.ts\u001b[2m:272:7)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/spatial/intersection-detection-simple.test.ts\u001b[39m\u001b[0m\u001b[2m:113:5)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mSimple Intersection Detection Validation - Seattle Region › validates intersection detection edge cases\u001b[39m\u001b[22m\n\n    SqliteError: unable to open database file\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 332 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'⚠️  ACCEPTABLE: Higher node ratio, may need optimization'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 333 |\u001b[39m     }\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 334 |\u001b[39m     \u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m     \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 335 |\u001b[39m     \u001b[36mif\u001b[39m (processingTime \u001b[33m<\u001b[39m \u001b[35m30000\u001b[39m) {\u001b[22m\n\u001b[2m     \u001b[90m 336 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'⚡ FAST: Processing completed in under 30 seconds'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 337 |\u001b[39m     } \u001b[36melse\u001b[39m \u001b[36mif\u001b[39m (processingTime \u001b[33m<\u001b[39m \u001b[35m60000\u001b[39m) {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat new Database (\u001b[22m\u001b[2mnode_modules/better-sqlite3/lib/database.js\u001b[2m:69:26)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/spatial/intersection-detection-simple.test.ts\u001b[39m\u001b[0m\u001b[2m:334:20)\u001b[22m\u001b[2m\u001b[22m\n","name":"/Users/shaydu/dev/carthorse/src/__tests__/spatial/intersection-detection-simple.test.ts","startTime":1753129619569,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Spatial Function Optimization Tests","PostGIS Spatial Functions"],"duration":15,"failureDetails":[],"failureMessages":[],"fullName":"Spatial Function Optimization Tests PostGIS Spatial Functions should use ST_Intersects for intersection detection","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should use ST_Intersects for intersection detection"},{"ancestorTitles":["Spatial Function Optimization Tests","PostGIS Spatial Functions"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Spatial Function Optimization Tests PostGIS Spatial Functions should use ST_DWithin for proximity queries","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should use ST_DWithin for proximity queries"},{"ancestorTitles":["Spatial Function Optimization Tests","PostGIS Spatial Functions"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Spatial Function Optimization Tests PostGIS Spatial Functions should use ST_Within for spatial containment","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should use ST_Within for spatial containment"},{"ancestorTitles":["Spatial Function Optimization Tests","PostGIS Spatial Functions"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Spatial Function Optimization Tests PostGIS Spatial Functions should use ST_Envelope for efficient bbox calculations","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should use ST_Envelope for efficient bbox calculations"},{"ancestorTitles":["Spatial Function Optimization Tests","Spatial Indexes"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Spatial Function Optimization Tests Spatial Indexes should have spatial indexes on geometry columns","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have spatial indexes on geometry columns"},{"ancestorTitles":["Spatial Function Optimization Tests","Spatial Indexes"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Spatial Function Optimization Tests Spatial Indexes should have spatial indexes on routing nodes","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have spatial indexes on routing nodes"},{"ancestorTitles":["Spatial Function Optimization Tests","Data Validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Spatial Function Optimization Tests Data Validation should validate geometry validity using ST_IsValid","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate geometry validity using ST_IsValid"},{"ancestorTitles":["Spatial Function Optimization Tests","Data Validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Spatial Function Optimization Tests Data Validation should ensure coordinate system consistency (SRID 4326)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should ensure coordinate system consistency (SRID 4326)"},{"ancestorTitles":["Spatial Function Optimization Tests","Data Validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Spatial Function Optimization Tests Data Validation should validate intersection nodes have proper trail connections","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate intersection nodes have proper trail connections"},{"ancestorTitles":["Spatial Function Optimization Tests","Enhanced Validation Functions"],"duration":14,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.<anonymous> (/Users/shaydu/dev/carthorse/src/__tests__/spatial-optimization.test.ts:237:29)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"Spatial Function Optimization Tests Enhanced Validation Functions should run enhanced spatial validation","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should run enhanced spatial validation"},{"ancestorTitles":["Spatial Function Optimization Tests","Enhanced Validation Functions"],"duration":0,"failureDetails":[{"length":128,"name":"error","severity":"ERROR","code":"42803","position":"186","file":"parse_agg.c","line":"596","routine":"check_agglevels_and_constraints"}],"failureMessages":["error: aggregate functions are not allowed in WHERE\n    at /Users/shaydu/dev/carthorse/node_modules/pg/lib/client.js:545:17\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Object.<anonymous> (/Users/shaydu/dev/carthorse/src/__tests__/spatial-optimization.test.ts:243:22)"],"fullName":"Spatial Function Optimization Tests Enhanced Validation Functions should validate spatial containment","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should validate spatial containment"},{"ancestorTitles":["Spatial Function Optimization Tests","Performance Optimization"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Spatial Function Optimization Tests Performance Optimization should use bounding box pre-filtering for spatial joins","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should use bounding box pre-filtering for spatial joins"},{"ancestorTitles":["Spatial Function Optimization Tests","Performance Optimization"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Spatial Function Optimization Tests Performance Optimization should use spatial indexes for distance calculations","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should use spatial indexes for distance calculations"},{"ancestorTitles":["Spatial Function Optimization Tests","API Endpoint Enhancement"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Spatial Function Optimization Tests API Endpoint Enhancement should support spatial filtering for bbox queries","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should support spatial filtering for bbox queries"},{"ancestorTitles":["Spatial Function Optimization Tests","API Endpoint Enhancement"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Spatial Function Optimization Tests API Endpoint Enhancement should validate intersection data integrity","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate intersection data integrity"}],"endTime":1753129619842,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mSpatial Function Optimization Tests › Enhanced Validation Functions › should run enhanced spatial validation\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 235 |\u001b[39m       \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m validator\u001b[33m.\u001b[39mvalidateSpatialIntegrity(\u001b[32m'boulder'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 236 |\u001b[39m       \u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 237 |\u001b[39m       expect(result\u001b[33m.\u001b[39mpassed)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 238 |\u001b[39m       expect(result\u001b[33m.\u001b[39missues\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBeGreaterThanOrEqual(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 239 |\u001b[39m       expect(result\u001b[33m.\u001b[39msummary\u001b[33m.\u001b[39mtotalTrails)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 240 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/spatial-optimization.test.ts\u001b[39m\u001b[0m\u001b[2m:237:29)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mSpatial Function Optimization Tests › Enhanced Validation Functions › should validate spatial containment\u001b[39m\u001b[22m\n\n    error: aggregate functions are not allowed in WHERE\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 241 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 242 |\u001b[39m     test(\u001b[32m'should validate spatial containment'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 243 |\u001b[39m       \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m client\u001b[33m.\u001b[39mquery(\u001b[32m`\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 244 |\u001b[39m \u001b[32m        SELECT COUNT(*) as count FROM trails t\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 245 |\u001b[39m \u001b[32m        WHERE region = 'boulder' AND geometry IS NOT NULL AND NOT ST_Within(\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 246 |\u001b[39m \u001b[32m          geometry, \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/pg/lib/client.js\u001b[2m:545:17\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/spatial-optimization.test.ts\u001b[39m\u001b[0m\u001b[2m:243:22)\u001b[22m\u001b[2m\u001b[22m\n","name":"/Users/shaydu/dev/carthorse/src/__tests__/spatial-optimization.test.ts","startTime":1753129619735,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Intersection Detection Accuracy Tests"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Intersection Detection Accuracy Tests should only create nodes at actual trail intersections and endpoints","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should only create nodes at actual trail intersections and endpoints"},{"ancestorTitles":["Intersection Detection Accuracy Tests"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Intersection Detection Accuracy Tests should handle different intersection tolerances correctly","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should handle different intersection tolerances correctly"}],"coverage":{},"endTime":1753129623418,"message":"","name":"/Users/shaydu/dev/carthorse/src/__tests__/spatial/intersection-accuracy.test.ts","startTime":1753129623418,"status":"skipped","summary":""},{"assertionResults":[{"ancestorTitles":["Intersection Detection Algorithm - Real Data Analysis"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Intersection Detection Algorithm - Real Data Analysis should analyze current intersection detection behavior with real data","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should analyze current intersection detection behavior with real data"},{"ancestorTitles":["Intersection Detection Algorithm - Real Data Analysis"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Intersection Detection Algorithm - Real Data Analysis should test different intersection tolerances","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should test different intersection tolerances"}],"coverage":{},"endTime":1753129623418,"message":"","name":"/Users/shaydu/dev/carthorse/src/__tests__/intersection-detection.test.ts","startTime":1753129623418,"status":"skipped","summary":""},{"assertionResults":[{"ancestorTitles":["CARTHORSE Basic Tests"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"CARTHORSE Basic Tests DataIntegrityValidator can be instantiated","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"DataIntegrityValidator can be instantiated"}],"coverage":{},"endTime":1753129623418,"message":"","name":"/Users/shaydu/dev/carthorse/src/__tests__/basic.test.ts","startTime":1753129623418,"status":"skipped","summary":""},{"assertionResults":[{"ancestorTitles":["CLI Integration Tests"],"duration":63,"failureDetails":[],"failureMessages":[],"fullName":"CLI Integration Tests CLI --help shows usage information","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"CLI --help shows usage information"},{"ancestorTitles":["CLI Integration Tests"],"duration":57,"failureDetails":[],"failureMessages":[],"fullName":"CLI Integration Tests CLI --version shows version information","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"CLI --version shows version information"},{"ancestorTitles":["CLI Integration Tests"],"duration":59,"failureDetails":[],"failureMessages":[],"fullName":"CLI Integration Tests CLI validates required --region parameter","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"CLI validates required --region parameter"},{"ancestorTitles":["CLI Integration Tests"],"duration":58,"failureDetails":[],"failureMessages":[],"fullName":"CLI Integration Tests CLI validates required --out parameter","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"CLI validates required --out parameter"},{"ancestorTitles":["CLI Integration Tests"],"duration":157,"failureDetails":[],"failureMessages":[],"fullName":"CLI Integration Tests CLI accepts valid parameters without errors","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"CLI accepts valid parameters without errors"},{"ancestorTitles":["CLI Integration Tests"],"duration":170,"failureDetails":[],"failureMessages":[],"fullName":"CLI Integration Tests CLI --validate flag is recognized","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"CLI --validate flag is recognized"},{"ancestorTitles":["CLI Integration Tests"],"duration":82,"failureDetails":[],"failureMessages":[],"fullName":"CLI Integration Tests CLI --build-master flag is recognized","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"CLI --build-master flag is recognized"},{"ancestorTitles":["CLI Integration Tests"],"duration":166,"failureDetails":[],"failureMessages":[],"fullName":"CLI Integration Tests CLI --simplify-tolerance accepts numeric values","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"CLI --simplify-tolerance accepts numeric values"},{"ancestorTitles":["CLI Integration Tests"],"duration":170,"failureDetails":[],"failureMessages":[],"fullName":"CLI Integration Tests CLI --target-size accepts numeric values","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"CLI --target-size accepts numeric values"},{"ancestorTitles":["CLI Integration Tests"],"duration":163,"failureDetails":[],"failureMessages":[],"fullName":"CLI Integration Tests CLI rejects invalid numeric values","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"CLI rejects invalid numeric values"},{"ancestorTitles":["CLI Integration Tests"],"duration":93,"failureDetails":[],"failureMessages":[],"fullName":"CLI Integration Tests CLI shows meaningful error for invalid region","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"CLI shows meaningful error for invalid region"},{"ancestorTitles":["CLI End-to-End Tests (requires test database)"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"CLI End-to-End Tests (requires test database) CLI can export a region successfully","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"CLI can export a region successfully"},{"ancestorTitles":["CLI End-to-End Tests (requires test database)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"CLI End-to-End Tests (requires test database) CLI can build master database and export","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"CLI can build master database and export"},{"ancestorTitles":["End-to-end bbox export integration"],"duration":1123,"failureDetails":[],"failureMessages":[],"fullName":"End-to-end bbox export integration exports the custom initial_view_bbox for boulder","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"exports the custom initial_view_bbox for boulder"},{"ancestorTitles":["End-to-end bbox export integration"],"duration":978,"failureDetails":[],"failureMessages":[],"fullName":"End-to-end bbox export integration calculates and exports the fallback initial_view_bbox for seattle","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"calculates and exports the fallback initial_view_bbox for seattle"}],"endTime":1753129623277,"message":"","name":"/Users/shaydu/dev/carthorse/src/__tests__/cli-integration.test.ts","startTime":1753129619912,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Intersection Detection - Unit Tests","Algorithm Analysis"],"duration":14,"failureDetails":[],"failureMessages":[],"fullName":"Intersection Detection - Unit Tests Algorithm Analysis should identify the core intersection detection problems","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should identify the core intersection detection problems"},{"ancestorTitles":["Intersection Detection - Unit Tests","Algorithm Analysis"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Intersection Detection - Unit Tests Algorithm Analysis should test intersection tolerance sensitivity with mock data","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should test intersection tolerance sensitivity with mock data"},{"ancestorTitles":["Intersection Detection - Unit Tests","Algorithm Validation"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"Intersection Detection - Unit Tests Algorithm Validation should validate that intersection detection is working correctly","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should validate that intersection detection is working correctly"}],"endTime":1753129623322,"message":"","name":"/Users/shaydu/dev/carthorse/src/__tests__/spatial/intersection-detection-unit.test.ts","startTime":1753129623280,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Schema Version Validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Schema Version Validation should have expected schema version","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should have expected schema version"},{"ancestorTitles":["Schema Version Validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Schema Version Validation should validate PostgreSQL schema if environment is configured","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should validate PostgreSQL schema if environment is configured"},{"ancestorTitles":["Schema Version Validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Schema Version Validation should validate test database schema if it exists","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should validate test database schema if it exists"},{"ancestorTitles":["Schema Version Validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Schema Version Validation should validate production database schema if it exists","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should validate production database schema if it exists"}],"endTime":1753129623349,"message":"","name":"/Users/shaydu/dev/carthorse/src/__tests__/schema-version.test.ts","startTime":1753129623329,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["PostGIS Functions Syntax Validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PostGIS Functions Syntax Validation should have valid SQL syntax in PostGIS functions file","invocations":1,"location":null,"numPassingAsserts":19,"retryReasons":[],"status":"passed","title":"should have valid SQL syntax in PostGIS functions file"},{"ancestorTitles":["PostGIS Functions Syntax Validation"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"PostGIS Functions Syntax Validation should have all required function signatures","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should have all required function signatures"},{"ancestorTitles":["PostGIS Functions Syntax Validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PostGIS Functions Syntax Validation should have proper error handling and validation","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should have proper error handling and validation"},{"ancestorTitles":["PostGIS Functions Syntax Validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PostGIS Functions Syntax Validation should have comprehensive documentation and examples","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should have comprehensive documentation and examples"},{"ancestorTitles":["PostGIS Functions Syntax Validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PostGIS Functions Syntax Validation should use advanced PostGIS functions for optimization (warn only)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should use advanced PostGIS functions for optimization (warn only)"},{"ancestorTitles":["PostGIS Functions Syntax Validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PostGIS Functions Syntax Validation should have proper return types and data structures","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"should have proper return types and data structures"},{"ancestorTitles":["PostGIS Functions Syntax Validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PostGIS Functions Syntax Validation should include performance optimization features","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should include performance optimization features"}],"endTime":1753129623373,"message":"","name":"/Users/shaydu/dev/carthorse/src/__tests__/postgis-functions-syntax.test.ts","startTime":1753129623352,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["PostGIS Intersection Functions","detect_trail_intersections()"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PostGIS Intersection Functions detect_trail_intersections() should detect intersections between crossing trails","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should detect intersections between crossing trails"},{"ancestorTitles":["PostGIS Intersection Functions","detect_trail_intersections()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PostGIS Intersection Functions detect_trail_intersections() should handle different tolerance values","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should handle different tolerance values"},{"ancestorTitles":["PostGIS Intersection Functions","build_routing_nodes()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PostGIS Intersection Functions build_routing_nodes() should create routing nodes from intersection detection","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should create routing nodes from intersection detection"},{"ancestorTitles":["PostGIS Intersection Functions","build_routing_nodes()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PostGIS Intersection Functions build_routing_nodes() should achieve reasonable node-to-trail ratio","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should achieve reasonable node-to-trail ratio"},{"ancestorTitles":["PostGIS Intersection Functions","build_routing_edges()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PostGIS Intersection Functions build_routing_edges() should create routing edges between nodes","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should create routing edges between nodes"},{"ancestorTitles":["PostGIS Intersection Functions","get_intersection_stats()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PostGIS Intersection Functions get_intersection_stats() should provide accurate intersection statistics","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should provide accurate intersection statistics"},{"ancestorTitles":["PostGIS Intersection Functions","validate_intersection_detection()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PostGIS Intersection Functions validate_intersection_detection() should pass all validation checks","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should pass all validation checks"},{"ancestorTitles":["PostGIS Intersection Functions","split_trails_at_intersections() 3D geometry preservation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PostGIS Intersection Functions split_trails_at_intersections() 3D geometry preservation should produce only LINESTRINGZ segments with 3D coordinates","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should produce only LINESTRINGZ segments with 3D coordinates"},{"ancestorTitles":["PostGIS Intersection Functions","Integration Test: Full Pipeline"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PostGIS Intersection Functions Integration Test: Full Pipeline should complete full intersection detection pipeline","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should complete full intersection detection pipeline"}],"endTime":1753129623395,"message":"","name":"/Users/shaydu/dev/carthorse/src/__tests__/spatial/postgis-functions.test.ts","startTime":1753129623376,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["initial_view_bbox logic"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"initial_view_bbox logic uses a valid object from DB as-is","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"uses a valid object from DB as-is"},{"ancestorTitles":["initial_view_bbox logic"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"initial_view_bbox logic parses a valid stringified bbox from DB","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"parses a valid stringified bbox from DB"},{"ancestorTitles":["initial_view_bbox logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"initial_view_bbox logic falls back to calculated bbox for null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"falls back to calculated bbox for null"},{"ancestorTitles":["initial_view_bbox logic"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"initial_view_bbox logic falls back to calculated bbox for string \"null\"","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"falls back to calculated bbox for string \"null\""},{"ancestorTitles":["initial_view_bbox logic"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"initial_view_bbox logic falls back to calculated bbox for empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"falls back to calculated bbox for empty string"},{"ancestorTitles":["initial_view_bbox logic"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"initial_view_bbox logic falls back to calculated bbox for invalid object","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"falls back to calculated bbox for invalid object"},{"ancestorTitles":["initial_view_bbox logic"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"initial_view_bbox logic calculates the fallback bbox accurately","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"calculates the fallback bbox accurately"}],"endTime":1753129623415,"message":"","name":"/Users/shaydu/dev/carthorse/src/__tests__/bbox.test.ts","startTime":1753129623399,"status":"passed","summary":""}],"wasInterrupted":false}
